{"version":3,"sources":["webpack:///webpack/bootstrap 85fa6f1dd03827b3b401","webpack:///external \"react\"","webpack:///./kit/config.js","webpack:///external \"prop-types\"","webpack:///external \"react-apollo\"","webpack:///external \"react-router-dom\"","webpack:///external \"react-redux\"","webpack:///external \"chalk\"","webpack:///./kit/lib/env.js","webpack:///external \"react-helmet\"","webpack:///./kit/lib/routing.js","webpack:///./src/store/actions.js","webpack:///./src/components/modules/Dashboard.js","webpack:///./kit/entry/server_dev.js","webpack:///./kit/lib/console.js","webpack:///external \"boxen\"","webpack:///external \"ip\"","webpack:///./kit/entry/server.js","webpack:///external \"stream\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"react-dom/server\"","webpack:///external \"koa\"","webpack:///external \"koa-sslify\"","webpack:///external \"kcors\"","webpack:///external \"koa-send\"","webpack:///external \"koa-helmet\"","webpack:///external \"koa-router\"","webpack:///external \"microseconds\"","webpack:///external \"react-router\"","webpack:///external \"apollo-server-koa\"","webpack:///external \"apollo-local-query\"","webpack:///external \"graphql\"","webpack:///./src/app.js","webpack:///./src/components/main/index.js","webpack:///./src/components/graphql.js","webpack:///./src/graphql/queries/all_user_statuses.gql","webpack:///./src/components/routes.js","webpack:///./src/components/main/index/LoginModal.js","webpack:///external \"react-bootstrap\"","webpack:///./src/components/main/index/DashboardLinkOrButton.js","webpack:///./src/components/reused/LinkOrButton.js","webpack:///./src/components/modules/all.js","webpack:///./src/components/modules/Database.js","webpack:///./src/components/modules/Doujin.js","webpack:///./src/components/modules/Forum.js","webpack:///./src/components/modules/Reader.js","webpack:///./src/components/modules/Reviews.js","webpack:///./src/components/modules/SiteNews.js","webpack:///./src/components/redux.js","webpack:///./src/components/stats.js","webpack:///./src/components/stats.scss","webpack:///./src/components/styles/index.js","webpack:///./src/components/styles/styles.css","webpack:///./src/components/styles/styles.scss","webpack:///./src/components/styles/styles.less","webpack:///./src/components/main/main.scss","webpack:///./src/components/main/reactql-logo.svg","webpack:///./src/reducers/add_calls.js","webpack:///./src/reducers/counter.js","webpack:///./src/reducers/login_modal.js","webpack:///external \"immutable\"","webpack:///./config/project.js","webpack:///./config/server.js","webpack:///./config/browser.js","webpack:///./kit/lib/redux.js","webpack:///external \"redux\"","webpack:///external \"redux-thunk\"","webpack:///external \"seamless-immutable\"","webpack:///./kit/views/ssr.js","webpack:///./kit/lib/apollo.js","webpack:///./config/paths.js","webpack:///external \"path\"","webpack:///external \"koa-bodyparser\""],"names":["Common","constructor","reducers","Map","apolloMiddleware","apolloAfterware","apolloNetworkOptions","apolloClientOptions","graphQLEndpoint","graphQLServer","jwtEndpoint","addReducer","key","reducer","initialState","Error","set","enableGraphQLServer","endpoint","graphiQL","setGraphQLEndpoint","uri","setJwtEndpoint","addApolloMiddleware","middlewareFunc","push","addApolloAfterware","afterwareFunc","setApolloClientOptions","opt","setApolloNetworkOptions","Config","ServerConfig","routes","Set","koaAppFunc","enableHTTP","enableForceSSL","sslOptions","middleware","graphQLSchema","enableBodyParser","bodyParserOptions","corsOptions","getKoaApp","func","enableSSL","cert","forceSSL","disableHTTP","disableBodyParser","setBodyParserOptions","set404Handler","handler404","setErrorHandler","errorHandler","addMiddleware","add","addRoute","method","route","handlers","addGetRoute","addPostRoute","addPutRoute","addPatchRoute","addDeleteRoute","setGraphQLSchema","schema","setCORSOptions","ClientConfig","getServerURL","host","port","allowSSL","stub","Status","PureComponent","render","code","children","props","staticContext","status","propTypes","number","isRequired","node","defaultProps","NotFound","Redirect","to","from","permanent","oneOfType","string","object","bool","toggleLoginModal","console","log","type","payload","show","Dashboard","userStatusFormMutation","userStatusFormQuery","UserStatusForm","data","mutate","loading","assert","currentUser","form","handleSubmit","e","preventDefault","FormData","variables","text","get","then","res","catch","err","ref","ApolloUserStatusForm","query","UserStatusesContainer","presentation","allUserStatuses","edges","shape","arrayOf","id","creationDate","ApolloUserStatusesContainer","UserStatusesPresentation","user_status_edges","map","user_status","css","scripts","app","router","listen","use","allowedMethods","chalk","bgYellow","black","logServerStarted","message","green","bold","url","address","padding","borderColor","margin","staticMiddleware","createReactHandler","graphql","createNeworkInterface","localInterface","context","createLocalInterface","externalInterface","staticMiddlewareHandler","ctx","next","path","root","public","immutable","distDev","chunkManifest","reactHandler","routeContext","components","request","store","apollo","includes","redirect","htmlStream","write","reactStream","renderToNodeStream","rewind","webpackManifest","__STATE__","getState","pipe","body","statusCode","start","now","end","parse","since","total","microseconds","milliseconds","seconds","ssrMode","networkInterface","forEach","post","graphiQLEndpoint","endpointURL","require","servers","createServer","callback","process","env","SSL_PORT","IndexContainer","name","content","hello","SiteNews","Reader","Database","Forum","Reviews","Doujin","ApolloIndexContainer","GraphQLMessage","isLoading","Home","Page","match","params","WhenNotFound","FADE_DURATION","styles","modal","position","zIndex","top","bottom","left","right","modalBackdrop","backgroundColor","opacity","modalTextContainer","width","height","transform","border","boxShadow","textAlign","LoginModal","state","loginModal","loginDest","fetch","json","resJson","token","localStorage","setItem","window","location","replace","dispatch","DashboardLinkOrButton","isLink","propsToPass","onClick","DisplayComponent","LinkOrButton","otherProps","modules","ReduxCounter","counter","triggerIncrement","count","info","val","styleExamples","example","action","merge","uriOptions","development","production","slugs","jwtRetrieve","credentials","stateDump","JSON","stringify","engine","req","options","headers","getItem","authorization","createNewStore","hasState","unwind","r","Object","assign","concat","arr","defaultReducer","keys","apolloClient","__REDUX_DEVTOOLS_EXTENSION__","f","Html","head","meta","toComponent","title","__html","reduce","out","src","element","createClient","getNetworkInterface","browserClient","reduxRootSelector","opts","applyMiddleware","useAfter","applyAfterware","join","__dirname","module","exports","kit","entry","webpack","views","static","dist","resolve"],"mappings":"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","file":"server_dev.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 85fa6f1dd03827b3b401","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","// Simple class to act as a singleton for app-wide configuration.\n\n// We'll start with a common config that can be extended separately by the\n// server/client, to provide environment-specific functionality\nclass Common {\n  constructor() {\n    // Store reducers in a `Map`, for easy key retrieval\n    this.reducers = new Map();\n\n    // Apollo (middle|after)ware\n    this.apolloMiddleware = [];\n    this.apolloAfterware = [];\n    this.apolloNetworkOptions = {};\n    this.apolloClientOptions = {};\n\n    // GraphQL endpoint.  This needs setting via either `config.enableGraphQLServer()`\n    // or `config.setGraphQLEndpoint()`\n    this.graphQLEndpoint = null;\n\n    // Set to true if we're using an internal GraphQL server\n    this.graphQLServer = false;\n\n    // Endpoint to retrieve jwt token. This needs setting via config.setJwtEndpoint()`\n    this.jwtEndpoint = null;\n  }\n\n  /* REDUX */\n\n  // Adds a new reducer.  Accepts a `key` string, a `reducer` function, and a\n  // (by default empty) `initialState` object, which will ultimately become immutable\n  addReducer(key, reducer, initialState = {}) {\n    if (typeof reducer !== 'function') {\n      throw new Error(`Can't add reducer for '${key}' - reducer must be a function`);\n    }\n    this.reducers.set(key, {\n      reducer,\n      initialState,\n    });\n  }\n\n  /* GRAPHQL */\n\n  // Enables internal GraphQL server.  Default GraphQL and GraphiQL endpoints\n  // can be overridden\n  enableGraphQLServer(endpoint = '/graphql', graphiQL = true) {\n    this.graphQLServer = true;\n    this.graphQLEndpoint = endpoint;\n    this.graphiQL = graphiQL;\n  }\n\n  // Set an external GraphQL URI for use with Apollo\n  setGraphQLEndpoint(uri, graphiQL = true) {\n    this.graphQLEndpoint = uri;\n    this.graphiQL = graphiQL;\n  }\n\n  // Set a URI to retrieve jwt tokens for auth\n  setJwtEndpoint(uri) {\n    this.jwtEndpoint = uri;\n  }\n\n  // Register Apollo middleware function\n  addApolloMiddleware(middlewareFunc) {\n    this.apolloMiddleware.push(middlewareFunc);\n  }\n\n  // Register Apollo afterware function\n  addApolloAfterware(afterwareFunc) {\n    this.apolloAfterware.push(afterwareFunc);\n  }\n\n  // Apollo Client options.  These will be merged in with the `createClient`\n  // default options defined in `kit/lib/apollo.js`\n  setApolloClientOptions(opt = {}) {\n    this.apolloClientOptions = opt;\n  }\n\n  // Apollo Network options.  These will be merged in with the `createNetworkInterface`\n  // default options defined in `kit/lib/apollo.js`\n  setApolloNetworkOptions(opt = {}) {\n    this.apolloNetworkOptions = opt;\n  }\n}\n\n// Placeholder for the class we'll attach\nlet Config;\n\n// Server Config extensions.  This is wrapped in a `SERVER` block to avoid\n// adding unnecessary functionality to the client bundle.  Every byte counts!\nif (SERVER) {\n  Config = class ServerConfig extends Common {\n    constructor() {\n      super();\n      // Create a set for routes -- to retrieve based on insertion order\n      this.routes = new Set();\n\n      // Koa application function. But default, this is null\n      this.koaAppFunc = null;\n\n      // Flag for setting whether plain HTTP should be disabled\n      this.enableHTTP = true;\n\n      // Force SSL. Rewrites all non-SSL queries to SSL.  False, by default.\n      this.enableForceSSL = false;\n\n      // Options for enabling SSL. By default, this is null. If SSL is enabled\n      // in userland, this would instead hold an object of options\n      this.sslOptions = null;\n\n      // Custom middleware -- again, based on insertion order\n      this.middleware = new Set();\n\n      // GraphQL schema (if we're using an internal server)\n      this.graphQLSchema = null;\n\n      // Attach a GraphiQL IDE endpoint to our server?  By default - no.  If\n      // this === true, this will default to `/graphql`.  If it's a string, it'll\n      // default to the string value\n      this.graphiQL = false;\n\n      // Enable body parsing by default.  Leave `koa-bodyparser` opts as default\n      this.enableBodyParser = true;\n      this.bodyParserOptions = {};\n\n      // CORS options for `koa-cors`\n      this.corsOptions = {};\n    }\n\n    /* WEB SERVER / SSR */\n\n    // Get access to Koa's `app` instance, for adding custom instantiation\n    // or doing something that's not covered by other functions\n    getKoaApp(func) {\n      this.koaAppFunc = func;\n    }\n\n    // Enable SSL. Normally, you'd use an upstream proxy like Nginx to handle\n    // SSL. But if you want to run a 'bare' Koa HTTPS web server, you can pass\n    // in the certificate details here and it'll respond to SSL requests\n    enableSSL(opt) {\n      // At a minimum, we should have `key` and `cert` -- check for those\n      if (typeof opt !== 'object' || !opt.key || !opt.cert) {\n        throw new Error('Cannot enable SSL. Missing `key` and/or `cert`');\n      }\n      this.sslOptions = opt;\n    }\n\n    // Force SSL. Rewrites all non-SSL queries to SSL. Any options here are\n    // passed to `koa-sslify`, the SSL enforcement middleware\n    forceSSL(opt = {}) {\n      this.enableForceSSL = opt;\n    }\n\n    // Disable plain HTTP.  Note this should only be used if you've also set\n    // `enableSSL()` and you don't want dual-HTTP+SSL config\n    disableHTTP() {\n      this.enableHTTP = false;\n    }\n\n    // Disable the optional `koa-bodyparser`, to prevent POST data being sent to\n    // each request.  By default, body parsing is enabled.\n    disableBodyParser() {\n      this.enableBodyParser = false;\n    }\n\n    setBodyParserOptions(opt = {}) {\n      this.bodyParserOptions = opt;\n    }\n\n    // 404 handler for the server.  By default, `kit/entry/server.js` will\n    // simply return a 404 status code without modifying the HTML render.  By\n    // setting a handler here, this will be returned instead\n    set404Handler(func) {\n      if (typeof func !== 'function') {\n        throw new Error('404 handler must be a function');\n      }\n      this.handler404 = func;\n    }\n\n    // Error handler.  If this isn't defined, the server will simply return a\n    // 'There was an error. Please try again later.' message, and log the output\n    // to the console.  Override that behaviour by passing a (e, ctx, next) -> {} func\n    setErrorHandler(func) {\n      if (typeof func !== 'function') {\n        throw new Error('Error handler must be a function');\n      }\n      this.errorHandler = func;\n    }\n\n    // Add custom middleware.  This should be an async func, for use with Koa\n    addMiddleware(middlewareFunc) {\n      this.middleware.add(middlewareFunc);\n    }\n\n    // Adds a custom server route to attach to our Koa router\n    addRoute(method, route, ...handlers) {\n      this.routes.add({\n        method,\n        route,\n        handlers,\n      });\n    }\n\n    // Adds custom GET route\n    addGetRoute(route, ...handlers) {\n      this.addRoute('get', route, ...handlers);\n    }\n\n    // Adds custom POST route\n    addPostRoute(route, ...handlers) {\n      this.addRoute('post', route, ...handlers);\n    }\n\n    // Adds custom PUT route\n    addPutRoute(route, ...handlers) {\n      this.addRoute('put', route, ...handlers);\n    }\n\n    // Adds custom PATCH route\n    addPatchRoute(route, ...handlers) {\n      this.addRoute('patch', route, ...handlers);\n    }\n\n    // Adds custom DELETE route\n    addDeleteRoute(route, ...handlers) {\n      this.addRoute('delete', route, ...handlers);\n    }\n\n    // Set the GraphQL schema. This should only be called on the server, otherwise\n    // the bundle size passed by the `schema` object will be unnecessarily inflated\n    setGraphQLSchema(schema) {\n      this.graphQLSchema = schema;\n    }\n\n    // CORS options, for `koa-cors` instantiation\n    setCORSOptions(opt = {}) {\n      this.corsOptions = opt;\n    }\n  };\n} else {\n  // For the client config, we'll extend `Common` by default -- but if we need\n  // anything unique to the browser in the future, we'd add it here...\n  Config = class ClientConfig extends Common {};\n}\n\n// Since there's only one `Config` instance globally, we'll create the new\n// instance here and export it.  This will then provide any subsequent imports\n// with the same object, so we can add settings to a common config\nexport default new Config();\n\n\n\n// WEBPACK FOOTER //\n// ./kit/config.js","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"react-router-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-dom\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"chalk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chalk\"\n// module id = 6\n// module chunks = 0","/* eslint-disable import/prefer-default-export */\n\n// Environment-aware functions\n\n// Get the protocol://host:port of where the current server would bind\nexport function getServerURL(host = process.env.HOST, port = process.env.PORT, allowSSL = true) {\n  // Check for SSL\n  if (allowSSL && process.env.SSL_PORT) {\n    const stub = `https://${host || process.env.HOST}`;\n\n    // If we're on port 443, that's 'regular' SSL so no need to specify port\n    if (process.env.SSL_PORT === '443') return stub;\n    return `${stub}:${process.env.SSL_PORT}`;\n  }\n\n  // Plain HTTP\n  const stub = `http://${host || process.env.HOST}`;\n\n  // If we're on port 80, that's 'regular' HTTP so no need to specify port\n  if (port === '80') return stub;\n  return `${stub}:${port}`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/env.js","module.exports = require(\"react-helmet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-helmet\"\n// module id = 8\n// module chunks = 0","/* eslint-disable no-param-reassign */\n\n// ----------------------\n// IMPORTS\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect as ReactRouterRedirect } from 'react-router-dom';\n\n// ----------------------\n\n// <Status code=\"xxx\"> component.  Updates the context router's context, which\n// can be used by the server handler to respond to the status on the server.\nclass Status extends React.PureComponent {\n  static propTypes = {\n    code: PropTypes.number.isRequired,\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    children: null,\n  }\n\n  render() {\n    const { code, children } = this.props;\n    return (\n      <Route render={({ staticContext }) => {\n        if (staticContext) {\n          staticContext.status = code;\n        }\n        return children;\n      }} />\n    );\n  }\n}\n\n// <NotFound> component.  If this renders on the server in development mode,\n// it will attempt to proxyify the request to the upstream `webpack-dev-server`.\n// In production, it will issue a hard 404 and render.  In the browser, it will\n// simply render.\nexport class NotFound extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    children: null,\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Status code={404}>\n        {children}\n      </Status>\n    );\n  }\n}\n\n// <Redirect> component. Mirrors React Router's component by the same name,\n// except it sets a 301/302 status code for setting server-side HTTP headers.\nexport class Redirect extends React.PureComponent {\n  static propTypes = {\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n    from: PropTypes.string,\n    push: PropTypes.bool,\n    permanent: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    from: null,\n    push: false,\n    permanent: false,\n  }\n\n  render() {\n    const { to, from, push, permanent } = this.props;\n    const code = permanent ? 301 : 302;\n    return (\n      <Status code={code}>\n        <ReactRouterRedirect to={to} from={from} push={push} />\n      </Status>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/routing.js","export function toggleLoginModal(bool) {\n  console.log('toggleLoginModal being called');\n  return {\n    type: 'TOGGLE_MODAL',\n    payload: {\n      show: bool,\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/actions.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, graphql } from 'react-apollo';\n\nconst Dashboard = () => (\n  <div>\n    <h2>Dashboard</h2>\n    <ApolloUserStatusForm />\n    <ApolloUserStatusesContainer />\n  </div>\n);\n\nconst userStatusFormMutation = gql`\nmutation UserStatusForm($text: String!) {\n  createUserStatus(text: $text) {\n    reqStatus,\n    formErrors,\n    userStatus {\n      id\n    }\n  }\n}\n`;\n\nconst userStatusFormQuery = gql`\n{\n  currentUser {\n    id\n  }\n}\n`;\n\n\nconst UserStatusForm = ({ data, mutate }) => {\n  if (data.loading) {\n    return <div>Loading...</div>\n  }\n\n  console.assert(\n    data.currentUser,\n    'User status form accessed while user not logged in'\n  );\n\n  let form = null;\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(form);\n    const status = new FormData(form);\n    mutate({ variables: { text: status.get('text') } })\n      .then(res => {\n        if (res.status === 200) {\n          console.log('status submitted successfully');\n        }\n      })\n      .catch(err => {\n        console.log(`Network error: ${err}`);\n      });\n  };\n\n  return (\n    <div>\n      <h3>Update your status</h3>\n      <form\n        ref={ref => { form = ref; }}\n        onSubmit={e => handleSubmit(e)} >\n        <div>\n          <textarea name=\"text\" />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nlet ApolloUserStatusForm = graphql(userStatusFormQuery)(UserStatusForm);\nApolloUserStatusForm = graphql(userStatusFormMutation)(ApolloUserStatusForm);\n\nconst query = gql`\n{\n  allUserStatuses {\n    edges {\n      node {\n        id,\n        creationDate,\n        text\n      }\n    }\n  }\n}\n`;\n\n// I can create stateless functional components which receive data from apollo,\n// if I use the graphql(query)(component) pattern (instead of class decorator).\nconst UserStatusesContainer = ({ data }) => {\n  console.log(data);\n\n  if (data.loading) {\n    console.log(data);\n    return <div>Loading...</div>;\n  }\n\n  const presentation = (!data.allUserStatuses) ? <p>Error retrieving data</p> :\n    <UserStatusesPresentation user_status_edges={data.allUserStatuses.edges} />\n\n  if (!data.allUserStatuses) {\n    return <p>Error retrieving data</p>;\n  }\n\n  return (\n    <div>\n      <h3>User Statuses</h3>\n      {presentation}\n    </div>\n  );\n};\n\n\n// TODO: create a function to generate gql from proptypes or vice versa, or\n// from a common object (would I need to refer to schema for field types?),\n// if that will save me time\nUserStatusesContainer.propTypes = {\n  data: PropTypes.shape({\n    allUserStatuses: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          creationDate: PropTypes.string.isRequired,\n          text: PropTypes.string.isRequired,\n        }).isRequired,\n      }).isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nUserStatusesContainer.defaultProps = {\n  data: {\n    allUserStatuses: {\n      edges: [\n        {\n          node: {\n            id: 0,\n            creationDate: 'date str',\n            text: 'default text',\n          },\n        },\n      ],\n    },\n  },\n};\n\nconst ApolloUserStatusesContainer = graphql(query)(UserStatusesContainer);\n\nconst UserStatusesPresentation = ({ user_status_edges }) => {\n  return (\n    <div>\n      {user_status_edges.map(user_status => (\n        <p key={user_status.node.id}>\n          '{user_status.node.text}' created {user_status.node.creationDate}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nUserStatusesPresentation.propTypes = {\n  user_status_edges: PropTypes.arrayOf(PropTypes.shape({\n    node: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      creationDate: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired).isRequired,\n};\n\nexport default Dashboard;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Dashboard.js","/* eslint-disable no-console */\n\n// Production server entry point.  Spawns the server on default HOST:PORT\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Chalk terminal library\nimport chalk from 'chalk';\n\n/* Local */\n\n// Import console messages\nimport { logServerStarted } from 'kit/lib/console';\n\n// Extend the server base\nimport server, { createReactHandler, staticMiddleware } from './server';\n\n// ----------------------\n\n// Get manifest values\nconst css = '/assets/css/style.css';\nconst scripts = [\n  'vendor.js',\n  'browser.js'].map(key => `/${key}`);\n\n// Spawn the development server.\n// Runs inside an immediate `async` block, to await listening on ports\n(async () => {\n  const { app, router, listen } = server;\n\n  // Create proxy to tunnel requests to the browser `webpack-dev-server`\n  router.get('/*', createReactHandler(css, scripts));\n\n  // Connect the development routes to the server\n  app\n    .use(staticMiddleware())\n    .use(router.routes())\n    .use(router.allowedMethods());\n\n  // Spawn the server\n  listen();\n\n  // Log to the terminal that we're ready for action\n  logServerStarted({\n    type: 'server-side rendering',\n    chalk: chalk.bgYellow.black,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./kit/entry/server_dev.js","/* eslint-disable import/prefer-default-export, no-console */\n\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Display a border around a message\nimport boxen from 'boxen';\n\n// Chalk library, to add colour to our console logs\nimport chalk from 'chalk';\n\n// IP library, for determining the local network interface\nimport ip from 'ip';\n\n/* ReactQL */\nimport { getServerURL } from './env';\n\n// ----------------------\n\nexport function logServerStarted(opt = {}) {\n  let message = chalk.green(`Running ${(opt.chalk || chalk.bold)(opt.type)} in ${chalk.bold(process.env.NODE_ENV)} mode\\n\\n`);\n  message += `- ${chalk.bold('Local:           ')} ${getServerURL(opt.host, opt.port, opt.allowSSL)}`;\n\n  try {\n    const url = getServerURL(ip.address(), opt.port, opt.allowSSL);\n    message += `\\n- ${chalk.bold('On Your Network: ')} ${url}`;\n  } catch (err) { /* ignore errors */ }\n\n  console.log(\n    boxen(message, {\n      padding: 1,\n      borderColor: 'green',\n      margin: 1,\n    }),\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/console.js","module.exports = require(\"boxen\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"boxen\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"ip\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ip\"\n// module id = 16\n// module chunks = 0","/* eslint-disable no-param-reassign, no-console */\n\n// Server entry point, for Webpack.  This will spawn a Koa web server\n// and listen for HTTP requests.  Clients will get a return render of React\n// or the file they have requested\n//\n// Note:  No HTTP optimisation is performed here (gzip, http/2, etc).  Node.js\n// will nearly always be slower than Nginx or an equivalent, dedicated proxy,\n// so it's usually better to leave that stuff to a faster upstream provider\n\n// ----------------------\n// IMPORTS\n\n/* Node */\n\n// For pre-pending a `<!DOCTYPE html>` stream to the server response\nimport { PassThrough } from 'stream';\n\n// HTTP & SSL servers.  We can use `config.enableSSL|disableHTTP()` to enable\n// HTTPS and disable plain HTTP respectively, so we'll use Node's core libs\n// for building both server types.\nimport http from 'http';\nimport https from 'https';\n\n/* NPM */\n\n// Patch global.`fetch` so that Apollo calls to GraphQL work\nimport 'isomorphic-fetch';\n\n// React UI\nimport React from 'react';\n\n// React utility to transform JSX to HTML (to send back to the client)\nimport ReactDOMServer from 'react-dom/server';\n\n// Koa 2 web server.  Handles incoming HTTP requests, and will serve back\n// the React render, or any of the static assets being compiled\nimport Koa from 'koa';\n\n// Apollo tools to connect to a GraphQL server.  We'll grab the\n// `ApolloProvider` HOC component, which will inject any 'listening' React\n// components with GraphQL data props.  We'll also use `getDataFromTree`\n// to await data being ready before rendering back HTML to the client\nimport { ApolloProvider, getDataFromTree } from 'react-apollo';\n\n// Enforce SSL, if required\nimport koaSSL from 'koa-sslify';\n\n// Enable cross-origin requests\nimport koaCors from 'kcors';\n\n// Static file handler\nimport koaSend from 'koa-send';\n\n// HTTP header hardening\nimport koaHelmet from 'koa-helmet';\n\n// Koa Router, for handling URL requests\nimport KoaRouter from 'koa-router';\n\n// High-precision timing, so we can debug response time to serve a request\nimport ms from 'microseconds';\n\n// React Router HOC for figuring out the exact React hierarchy to display\n// based on the URL\nimport { StaticRouter } from 'react-router';\n\n// <Helmet> component for retrieving <head> section, so we can set page\n// title, meta info, etc along with the initial HTML\nimport Helmet from 'react-helmet';\n\n// Import the Apollo GraphQL server, for Koa\nimport { graphqlKoa, graphiqlKoa } from 'apollo-server-koa';\n\n// Allow local GraphQL schema querying when using a built-in GraphQL server\nimport apolloLocalQuery from 'apollo-local-query';\n\n// Import all of the GraphQL lib, for use with our Apollo client connection\nimport * as graphql from 'graphql';\n\n/* ReactQL */\n\n// App entry point.  This must come first, because app.js will set-up the\n// server config that we'll use later\nimport App from 'src/app';\n\n// Custom redux store creator.  This will allow us to create a store 'outside'\n// of Apollo, so we can apply our own reducers and make use of the Redux dev\n// tools in the browser\nimport createNewStore from 'kit/lib/redux';\n\n// Initial view to send back HTML render\nimport Html from 'kit/views/ssr';\n\n// Grab the shared Apollo Client / network interface instantiation\nimport { getNetworkInterface, createClient } from 'kit/lib/apollo';\n\n// App settings, which we'll use to customise the server -- must be loaded\n// *after* app.js has been called, so the correct settings have been set\nimport config from 'kit/config';\n\n// Import paths.  We'll use this to figure out where our public folder is\n// so we can serve static files\nimport PATHS from 'config/paths';\n\n// ----------------------\n\n// Create a network layer based on settings.  This is an immediate function\n// that binds either the `localInterface` function (if there's a built-in\n// GraphQL) or `externalInterface` (if we're pointing outside of ReactQL)\nconst createNeworkInterface = (() => {\n  // For a local interface, we want to allow passing in the request's\n  // context object, which can then feed through to our GraphQL queries to\n  // extract pertinent information and manipulate the response\n  function localInterface(context) {\n    return apolloLocalQuery.createLocalInterface(\n      graphql,\n      config.graphQLSchema,\n      {\n        // Attach the request's context, which certain GraphQL queries might\n        // need for accessing cookies, auth headers, etc.\n        context,\n      },\n    );\n  }\n\n  function externalInterface() {\n    return getNetworkInterface(config.graphQLEndpoint);\n  }\n\n  return config.graphQLServer ? localInterface : externalInterface;\n})();\n\n// Static file middleware\nexport function staticMiddleware() {\n  return async function staticMiddlewareHandler(ctx, next) {\n    try {\n      if (ctx.path !== '/') {\n        return await koaSend(\n          ctx,\n          ctx.path,\n          process.env.NODE_ENV === 'production' ? {\n            root: PATHS.public,\n            immutable: true,\n          } : {\n            root: PATHS.distDev,\n          },\n        );\n      }\n    } catch (e) { /* Errors will fall through */ }\n    return next();\n  };\n}\n\n// Function to create a React handler, per the environment's correct\n// manifest files\nexport function createReactHandler(css = [], scripts = [], chunkManifest = {}) {\n  return async function reactHandler(ctx) {\n    const routeContext = {};\n\n    // Generate the HTML from our React tree.  We're wrapping the result\n    // in `react-router`'s <StaticRouter> which will pull out URL info and\n    // store it in our empty `route` object\n    const components = (\n      <StaticRouter location={ctx.request.url} context={routeContext}>\n        <ApolloProvider store={ctx.store} client={ctx.apollo}>\n          <App />\n        </ApolloProvider>\n      </StaticRouter>\n    );\n\n    // Wait for GraphQL data to be available in our initial render,\n    // before dumping HTML back to the client\n    await getDataFromTree(components);\n\n    // Handle redirects\n    if ([301, 302].includes(routeContext.status)) {\n      // 301 = permanent redirect, 302 = temporary\n      ctx.status = routeContext.status;\n\n      // Issue the new `Location:` header\n      ctx.redirect(routeContext.url);\n\n      // Return early -- no need to set a response body\n      return;\n    }\n\n    // Handle 404 Not Found\n    if (routeContext.status === 404) {\n      // By default, just set the status code to 404.  Or, we can use\n      // `config.set404Handler()` to pass in a custom handler func that takes\n      // the `ctx` and store\n\n      if (config.handler404) {\n        config.handler404(ctx);\n\n        // Return early -- no need to set a response body, because that should\n        // be taken care of by the custom 404 handler\n        return;\n      }\n\n      ctx.status = routeContext.status;\n    }\n\n    // Create a HTML stream, to send back to the browser\n    const htmlStream = new PassThrough();\n\n    // Prefix the doctype, so the browser knows to expect HTML5\n    htmlStream.write('<!DOCTYPE html>');\n\n    // Create a stream of the React render. We'll pass in the\n    // Helmet component to generate the <head> tag, as well as our Redux\n    // store state so that the browser can continue from the server\n    const reactStream = ReactDOMServer.renderToNodeStream(\n      <Html\n        head={Helmet.rewind()}\n        window={{\n          webpackManifest: chunkManifest,\n          __STATE__: ctx.store.getState(),\n        }}\n        css={css}\n        scripts={scripts}>\n        {components}\n      </Html>,\n    );\n\n    // Pipe the React stream to the HTML output\n    reactStream.pipe(htmlStream);\n\n    // Set the return type to `text/html`, and stream the response back to\n    // the client\n    ctx.type = 'text/html';\n    ctx.body = htmlStream;\n  };\n}\n\n// Build the router, based on our app's settings.  This will define which\n// Koa route handlers\nconst router = (new KoaRouter())\n  // Set-up a general purpose /ping route to check the server is alive\n  .get('/ping', async ctx => {\n    ctx.body = 'pong';\n  })\n\n  // Favicon.ico.  By default, we'll serve this as a 204 No Content.\n  // If /favicon.ico is available as a static file, it'll try that first\n  .get('/favicon.ico', async ctx => {\n    ctx.res.statusCode = 204;\n  });\n\n// Build the app instance, which we'll use to define middleware for Koa\n// as a precursor to handling routes\nconst app = new Koa()\n  // Adds CORS config\n  .use(koaCors(config.corsOptions))\n\n  // Preliminary security for HTTP headers\n  .use(koaHelmet())\n\n  // Error wrapper.  If an error manages to slip through the middleware\n  // chain, it will be caught and logged back here\n  .use(async (ctx, next) => {\n    try {\n      await next();\n    } catch (e) {\n      // If we have a custom error handler, use that - else simply log a\n      // message and return one to the user\n      if (typeof config.errorHandler === 'function') {\n        config.errorHandler(e, ctx, next);\n      } else {\n        console.log('Error:', e.message);\n        ctx.body = 'There was an error. Please try again later.';\n      }\n    }\n  })\n\n  // It's useful to see how long a request takes to respond.  Add the\n  // timing to a HTTP Response header\n  .use(async (ctx, next) => {\n    const start = ms.now();\n    await next();\n    const end = ms.parse(ms.since(start));\n    const total = end.microseconds + (end.milliseconds * 1e3) + (end.seconds * 1e6);\n    ctx.set('Response-Time', `${total / 1e3}ms`);\n  })\n\n  // Create a new Apollo client and Redux store per request.  This will be\n  // stored on the `ctx` object, making it available for the React handler or\n  // any subsequent route/middleware\n  .use(async (ctx, next) => {\n    // Create a new server Apollo client for this request\n    ctx.apollo = createClient({\n      ssrMode: true,\n      // Create a network request.  If we're running an internal server, this\n      // will be a function that accepts the request's context, to feed through\n      // to the GraphQL schema\n      networkInterface: createNeworkInterface(ctx),\n    });\n\n    // Create a new Redux store for this request\n    ctx.store = createNewStore(ctx.apollo);\n\n    // Pass to the next middleware in the chain: React, custom middleware, etc\n    return next();\n  });\n\n/* FORCE SSL */\n\n// Middleware to re-write HTTP requests to SSL, if required.\nif (config.enableForceSSL) {\n  app.use(koaSSL(config.enableForceSSL));\n}\n\n// Attach custom middleware\nconfig.middleware.forEach(middlewareFunc => app.use(middlewareFunc));\n\n// Attach an internal GraphQL server, if we need one\nif (config.graphQLServer) {\n  // Attach the GraphQL schema to the server, and hook it up to the endpoint\n  // to listen to POST requests\n  router.post(\n    config.graphQLEndpoint,\n    graphqlKoa(context => ({\n      // Bind the current request context, so it's accessible within GraphQL\n      context,\n      // Attach the GraphQL schema\n      schema: config.graphQLSchema,\n    })),\n  );\n}\n\n// Do we need the GraphiQL query interface?  This can be used if we have an\n// internal GraphQL server, or if we're pointing to an external server.  First,\n// we check if `config.graphiql` === `true` to see if we need one...\n\nif (config.graphiQL) {\n  // The GraphiQL endpoint default depends on this order of precedence:\n  // explicit -> internal GraphQL server endpoint -> /graphql\n  let graphiQLEndpoint;\n\n  if (typeof config.graphiQL === 'string') {\n    // Since we've explicitly passed a string, we'll use that as the endpoint\n    graphiQLEndpoint = config.graphiQL;\n  } else if (config.graphQLServer) {\n    // If we have an internal GraphQL server, AND we haven't set a string,\n    // the default GraphiQL path should be the same as the server endpoint\n    graphiQLEndpoint = config.graphQLEndpoint;\n  } else {\n    // Since we haven't set anything, AND we don't have an internal server,\n    // by default we'll use `/graphql` which will work for an external server\n    graphiQLEndpoint = '/graphql';\n  }\n\n  router.get(\n    graphiQLEndpoint,\n    graphiqlKoa({\n      endpointURL: config.graphQLEndpoint,\n    }),\n  );\n}\n\n// Attach any custom routes we may have set in userland\nconfig.routes.forEach(route => {\n  router[route.method](route.route, ...route.handlers);\n});\n\n/* BODY PARSING */\n\n// `koa-bodyparser` is used to process POST requests.  Check that it's enabled\n// (default) and apply a custom config if we need one\nif (config.enableBodyParser) {\n  app.use(require('koa-bodyparser')(\n    // Pass in any options that may have been set in userland\n    config.bodyParserOptions,\n  ));\n}\n\n/* CUSTOM APP INSTANTIATION */\n\n// Pass the `app` to do anything we need with it in userland. Useful for\n// custom instantiation that doesn't fit into the middleware/route functions\nif (typeof config.koaAppFunc === 'function') {\n  config.koaAppFunc(app);\n}\n\n// Listener function that will start http(s) server(s) based on userland\n// config and available ports\nconst listen = () => {\n  // Spawn the listeners.\n  const servers = [];\n\n  // Plain HTTP\n  if (config.enableHTTP) {\n    servers.push(\n      http.createServer(app.callback()).listen(process.env.PORT),\n    );\n  }\n\n  // SSL -- only enable this if we have an `SSL_PORT` set on the environment\n  if (process.env.SSL_PORT) {\n    servers.push(\n      https.createServer(config.sslOptions, app.callback()).listen(process.env.SSL_PORT),\n    );\n  }\n\n  return servers;\n};\n\n// Export everything we need to run the server (in dev or prod)\nexport default {\n  router,\n  app,\n  listen,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./kit/entry/server.js","module.exports = require(\"stream\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"stream\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"https\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"https\"\n// module id = 20\n// module chunks = 0","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"react-dom/server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom/server\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"koa\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"koa-sslify\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-sslify\"\n// module id = 24\n// module chunks = 0","module.exports = require(\"kcors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"kcors\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"koa-send\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-send\"\n// module id = 26\n// module chunks = 0","module.exports = require(\"koa-helmet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-helmet\"\n// module id = 27\n// module chunks = 0","module.exports = require(\"koa-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-router\"\n// module id = 28\n// module chunks = 0","module.exports = require(\"microseconds\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"microseconds\"\n// module id = 29\n// module chunks = 0","module.exports = require(\"react-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router\"\n// module id = 30\n// module chunks = 0","module.exports = require(\"apollo-server-koa\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-server-koa\"\n// module id = 31\n// module chunks = 0","module.exports = require(\"apollo-local-query\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-local-query\"\n// module id = 32\n// module chunks = 0","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 33\n// module chunks = 0","// Aapp's entry point.  Every ReactQL projects requires 'src/app.js',\n// which both the server and browser will import.\n//\n// In this file, two things happen:\n//\n// 1.  Import styles&configuration code in config/ & reducers/ to configure app.\n//\n// 2.  Export the root React component that goes between <div id=\"main\"/>\n// in the server-side HTML.\n\n// ----------------------\n// IMPORTS\n\n/* ReactQL */\n\n/* App */\n\n// Main component -- i.e. the 'root' React component in our app\n\nimport Main from 'src/components/main';\n\n// Init config\nimport 'src/reducers/add_calls';\nimport 'config/project';\nimport 'config/server';\nimport 'config/browser';\n\n// Init global styles.  These will be added to the resulting CSS automatically\n// without any class hashing.  Use this to include default or framework CSS.\nimport './styles.global.css';\n\n// ----------------------\n// export the root component we want to mount as the starting point to our app.\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","// Main React component, that we'll import in `src/app.js`\n//\n// Note a few points from this file:\n//\n// 1.  We're using the format `main/index.js` for this file, which means we\n// can simply import 'src/components/main', which will auto-default to index.js.\n// This is a useful pattern when you have styles/images to pull from, and you\n// want to keep the component tree organised.\n//\n// 2.  We import SASS and a logo SVG file directly.  Classnames will be hashed\n// automatically, and images will be compressed/optimised in production.  File\n// names that are made available in the import variable will be identical on\n// both the server and browser.\n//\n// 3.  We're introducing React Router in this component.  In RR v4, routes are\n// not defined globally-- they're defined declaratively on components, so we\n// can respond to route changes anywhere.\n//\n// 4.  We're using `react-helmet`, which allows us to set <head> data like\n// a <title> or <meta> tags, which are filtered up to the main <Html> component\n// before HTML rendering.\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\nimport { gql, graphql } from 'react-apollo';\n\n// Routing via React Router\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n// <Helmet> component for setting the page title/meta tags\nimport Helmet from 'react-helmet';\n\n/* ReactQL */\n\n// NotFound 404 handler for unknown routes\nimport { Redirect } from 'kit/lib/routing';\n\n/* App */\n\n// Child React components. Note:  We can either export one main React component\n// per file, or in the case of <Home>, <Page> and <WhenFound>, we can group\n// multiple components per file where it makes sense to do so\nimport GraphQLMessage from 'src/components/graphql';\nimport { Page, WhenNotFound } from 'src/components/routes';\nimport LoginModal from 'src/components/main/index/LoginModal';\nimport DashboardLinkOrButton from 'src/components/main/index/DashboardLinkOrButton';\nimport modules from 'src/components/modules/all';\n\nimport ReduxCounter from 'src/components/redux';\nimport Stats from 'src/components/stats';\nimport Styles from 'src/components/styles';\n\n// Styles\nimport css from './main.scss';\n\n// Get the ReactQL logo.  This is a local .svg file, which will be made\n// available as a string relative to [root]/dist/assets/img/\nimport logo from './reactql-logo.svg';\n\n// ----------------------\n\nconst query = gql`\n{\n  currentUser {\n    id\n  }\n}\n`;\n\nconst IndexContainer = ({ data }) => (\n  <div>\n    { /* -- meta */ }\n    <Helmet\n      title=\"moshimoji\"\n      meta={[{\n        name: 'description',\n        content: 'Community-driven platform to read, share, and publish manga and other comics.',\n      }]} />\n\n    { /* -- Modal */ }\n    <LoginModal\n      toggleModal={null} />\n\n    { /* -- header */ }\n    <div className={css.hello}>\n      <Link to=\"/\"><h1>moshimoji</h1></Link>\n    </div>\n    <hr />\n\n    { /* -- dashboard button */ }\n    <div className={css.hello}>\n      {\n        (data.loading || SERVER)\n        // TODO: use presentational component for first button\n        // TODO: make sure first button is grayed out when loading or initial react\n          ? <button onClick={console.log('dashboard button clicked while inactive')}>dashboard</button> :\n          <DashboardLinkOrButton currentUser={data.currentUser} />\n      }\n    </div>\n    <hr />\n    { /* -- nav */ }\n    <ul>\n      <li><Link to=\"/reader\">reader</Link></li>\n      <li><Link to=\"/database\">database</Link></li>\n      <li><Link to=\"/forum\">forum</Link></li>\n      <li><Link to=\"/reviews\">reviews</Link></li>\n      <li><Link to=\"/doujin\">doujin</Link></li>\n      <li><Link to=\"/page/example\">Example page</Link></li>\n      <li><Link to=\"/old/path\">Redirect from /old/path &#8594; /new/path</Link></li>\n    </ul>\n    <hr />\n\n    { /* -- hm */ }\n    <Switch>\n      <Route exact path=\"/\" component={modules.SiteNews} />\n      <Route path=\"/dashboard\" component={modules.Dashboard} />\n      <Route path=\"/reader\" component={modules.Reader} />\n      <Route path=\"/database\" component={modules.Database} />\n      <Route path=\"/forum\" component={modules.Forum} />\n      <Route path=\"/reviews\" component={modules.Reviews} />\n      <Route path=\"/doujin\" component={modules.Doujin} />\n      <Route path=\"/page/:name\" component={Page} />\n      <Redirect from=\"/old/path\" to=\"/new/path\" />\n      <Route component={WhenNotFound} />\n    </Switch>\n    <hr />\n\n    { /* -- message component */ }\n    <GraphQLMessage />\n    <hr />\n\n    { /* -- counter component */ }\n    <ReduxCounter />\n    <hr />\n\n    { /* -- runtime info */ }\n    <p>Runtime info:</p>\n    <Stats />\n    <hr />\n\n    { /* -- styles info */ }\n    <p>Stylesheet examples:</p>\n    <Styles />\n  </div>\n);\n\nconst ApolloIndexContainer = graphql(query)(IndexContainer);\n\nexport default ApolloIndexContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/main/index.js","// Now, let's create a GraphQL-enabled component...\n\n// ... then, let's create the component and decorate it with the `graphql`\n// HOC that will automatically populate `this.props` with the query data\n// once the GraphQL API request has been completed\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// GraphQL\nimport { graphql } from 'react-apollo';\n\n/* App */\n\n// GraphQL queries.  Looking at this file demonstrates how to import fragments.\n// Webpack will compile this into inline GraphQL for us, so we can pass the\n// query to components using the @graphql decorator\n//import allMessages from 'src/graphql/queries/all_messages.gql';\nimport allUserStatuses from 'src/graphql/queries/all_user_statuses.gql';\n\n// ----------------------\n\n// Since this component needs to 'listen' to GraphQL data, we wrap it in\n// `react-apollo`'s `graphql` HOC/decorator and pass in the query that this\n// component requires.   Note: This is not to be confused with the `graphql`\n// lib, which is used on the server-side to initially define the schema\n@graphql(allUserStatuses)\nexport default class GraphQLMessage extends React.PureComponent {\n  // TODO: create a function to generate gql from proptypes or vice versa, or\n  // from a common object (would I need to refer to schema for field types?),\n  // if that will save me time\n\n  static propTypes = {\n    data: PropTypes.shape({\n      allUserStatuses: PropTypes.shape({\n        edges: PropTypes.arrayOf(PropTypes.shape({\n          node: PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            text: PropTypes.string.isRequired,\n          }).isRequired\n        }).isRequired).isRequired\n      }).isRequired,\n    }).isRequired,\n  }\n\n  static defaultProps = {\n    data: {\n      allUserStatuses: {\n        edges: [\n          {\n            node: {\n              id: 0,\n              text: 'default text',\n            }\n          }\n        ]\n      },\n    },\n  }\n\n  render() {\n    const { data } = this.props;\n    // Since we're dealing with async GraphQL data, we defend against the\n    // data not yet being loaded by checking to see that we have the `message`\n    // key on our returned object\n    //   const message = data.message && data.message.text;\n    // TODO: understand how this line^ works\n\n    // Apollo will tell us whether we're still loading.  We can also use this\n    // check to ensure we have a fully returned response\n    const isLoading = data.loading ? 'yes' : 'nope';\n    const message = (isLoading == 'nope') ?\n      data.allUserStatuses.edges[0].node.text : 'None'\n    return (\n      <div>\n        <h2>Message from GraphQL server: <em>{message}</em></h2>\n        <h2>Currently loading?: {isLoading}</h2>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/graphql.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"allUserStatuses\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"edges\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"node\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"text\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":98}};\n    doc.loc.source = {\"body\":\"query {\\n  allUserStatuses {\\n    edges {\\n      node {\\n        id,\\n        text\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \nmodule.exports = doc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/queries/all_user_statuses.gql\n// module id = 37\n// module chunks = 0","// Demonstrates several components on one page, each with their own `export`.\n//\n// These are smaller components that <Main> imports, and changes depending\n// on the page route (via React Router).\n//\n// <WhenNotFound> demonstrates the use of <NotFound>, a ReactQL helper\n// component that signals to our web server that we have a 404 error, to handle\n// accordingly\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* ReactQL */\n\n// NotFound 404 handler for unknown routes\nimport { NotFound } from 'kit/lib/routing';\n\n// ----------------------\n\n// We'll display this <Home> component when we're on the / route\nexport const Home = () => (\n  <h1>You&apos;re on the home page - click another link above</h1>\n);\n\n// Helper component that will be conditionally shown when the route matches.\n// This gives you an idea how React Router v4 works -- we have a `match`\n// prop that gives us information on the route we can use within the component\nexport const Page = ({ match }) => (\n  <h1>Changed route: {match.params.name}</h1>\n);\n\n// Specify PropTypes if the `match` object, which is injected to props by\n// the <Route> component\nPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object,\n  }).isRequired,\n};\n\n// Create a route that will be displayed when the code isn't found\nexport const WhenNotFound = () => (\n  <NotFound>\n    <h1>Unknown route - the 404 handler was triggered!</h1>\n  </NotFound>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/routes.js","// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// HOC/decorator to listen to Redux store state\nimport { connect } from 'react-redux';\n\nimport { Modal, Transition } from 'react-bootstrap';\n\nimport config from 'kit/config';\nimport { toggleLoginModal } from '../../../store/actions';\n\n// ----------------------\n// STYLING\nconst FADE_DURATION = 200;\n\nconst styles = {\n  modal : {\n    position: 'fixed',\n    zIndex: 1040,\n    top: 0, bottom: 0, left: 0, right: 0,\n  },\n  modalBackdrop : {\n    position: 'fixed',\n    top: 0, bottom: 0, left: 0, right: 0,\n    zIndex: 'auto',\n    backgroundColor:'#000',\n    opacity: 0.5\n  },\n  modalTextContainer : {\n    position: 'absolute',\n    width: '50%',\n    height: '50%',\n    top: '50%', left: '50%',\n    transform: `translate(-${50}%, -${50}%)`,\n    border: '1px solid #fff555',\n    backgroundColor: 'white',\n    boxShadow: '0 5px 15px rgba(0,0,0,.5)',\n    padding: 20,\n    textAlign: 'center'\n  }\n};\n\n// -----------------------\n// REDUX\n\n// @connect accepts a function that takes the full Redux state, and then\n// returns the portion of state that our component cares about.  In this example,\n// we're listening to `state.counter`, which we can show inside the component\n@connect(state => ({ loginModal: state.loginModal }))\nclass LoginModal extends Component {\n  static propTypes = {\n    // counter: PropTypes.shape({\n    //   count: PropTypes.number.isRequired,\n    // }),\n  };\n\n  static defaultProps = {\n    // counter: {\n    //   count: 0,\n    // },\n  }\n\n  handleSubmit(loginDest, e) {\n    e.preventDefault()\n    const data = new FormData(this.form);\n    fetch(config.jwtEndpoint, {\n      method: 'POST',\n      body: data,\n    })\n      .then(res => {\n        res.json().then(resJson => {\n          if (resJson.token) {\n            localStorage.setItem('token', resJson.token);\n            window.location.replace(loginDest);\n          }\n        });\n      })\n      .catch(err => {\n        console.log(`Network error: ${err}`);\n      });\n  }\n\n  render() {\n    // TODO: add logic to compute destination dynamically.\n    // can be dashboard or home/site news, depending on origin\n    // of modal (dashboard button or link preceding)\n    const loginDest = '/dashboard'\n\n    return (\n      // <Transition\n      //   in={true}\n      //   timeout={FADE_DURATION}\n      //   className='fade'\n      //   enteredClassName='in'\n      //   enteringClassName='in'>\n        <Modal\n          show={this.props.loginModal.show}\n          onHide={() => {this.props.dispatch(toggleLoginModal(false))}}\n          style={styles.modal}\n          backdropStyle={styles.modalBackdrop}>\n          <Modal.Body style={styles.modalTextContainer}>\n            <form\n              ref={ref => (this.form = ref)}\n              onSubmit={e => this.handleSubmit(loginDest, e)}\n            >\n              <div>\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" />\n              </div>\n              <div>\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" />\n              </div>\n              <button type=\"submit\">Login</button>\n            </form>\n          </Modal.Body>\n        </Modal>\n      // </Transition>\n    );\n  }\n}\n\nexport default LoginModal;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/main/index/LoginModal.js","module.exports = require(\"react-bootstrap\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-bootstrap\"\n// module id = 40\n// module chunks = 0","// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React from 'react';\n\n// HOC/decorator to listen to Redux store state\nimport { connect } from 'react-redux';\n\n// components\nimport LinkOrButton from 'src/components/reused/LinkOrButton';\n\n// Redux actions\nimport { toggleLoginModal } from '../../../store/actions';\n\n\n// ----------------------\n// COMPONENT\n// TODO: figure out if this can/should be rewritten as a stateless functional\n// component, even if it needs the the dispatch prop (don't think I can use an\n// es6 class decorator with a functional component, so can't use @connect)\n// TODO: consider refactoring this and LinkOrButton;\n// does it make sense to store things as class attrs?\n// does propsToPass really make sense?\n// or can I simply just pass uri, onclick separately?\n// should the isLink logic be moved elswhere?\n@connect()\nclass DashboardLinkOrButton extends React.PureComponent {\n  static propTypes = {\n    // counter: PropTypes.shape({\n    //   count: PropTypes.number.isRequired,\n    // }),\n  };\n\n  static defaultProps = {\n    // counter: {\n    //   count: 0,\n    // },\n  }\n\n  constructor(props) {\n    super(props);\n    // TODO: figure out if this should be setState instead\n    if (this.props.currentUser) {\n      this.isLink = true;\n      this.propsToPass = {\n        uri: '/dashboard/site',\n      };\n    } else {\n      this.isLink = false;\n      this.propsToPass = {\n        onClick: () => {\n          console.log('dashboard button was clicked');\n          this.props.dispatch(toggleLoginModal(true));\n        }\n      };\n    }\n  }\n\n  render() {\n    const DisplayComponent = ({ onClick }) => (\n      <button onClick={onClick}>dashboard</button>\n    );\n\n    return (\n      <LinkOrButton\n        DisplayComponent={DisplayComponent}\n        isLink={this.isLink}\n        propsToPass={this.propsToPass} />\n    );\n  }\n}\n\nexport default DashboardLinkOrButton;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/main/index/DashboardLinkOrButton.js","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// <LinkOrButton displayComponent={const} onClick= />\nconst LinkOrButton = ({ DisplayComponent, isLink, propsToPass }) => {\n  if (isLink) {\n    const { uri, otherProps } = propsToPass;\n    return <Link to={uri}><DisplayComponent props={otherProps} /></Link>;\n  }\n\n  const { onClick, otherProps } = propsToPass;\n  console.log('LinkOrButton');\n  console.log(onClick);\n  console.log(propsToPass);\n  return <DisplayComponent onClick={onClick} props={otherProps} />;\n};\n\nexport default LinkOrButton;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/reused/LinkOrButton.js","import Dashboard from 'src/components/modules/Dashboard';\nimport Database from 'src/components/modules/Database';\nimport Doujin from 'src/components/modules/Doujin';\nimport Forum from 'src/components/modules/Forum';\nimport Reader from 'src/components/modules/Reader';\nimport Reviews from 'src/components/modules/Reviews';\nimport SiteNews from 'src/components/modules/SiteNews';\n\nconst modules = {\n  Dashboard,\n  Database,\n  Doujin,\n  Forum,\n  Reader,\n  Reviews,\n  SiteNews,\n};\n\nexport default modules;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/all.js","import React from 'react';\n\nconst Database = () => (\n  <h2>Database module</h2>\n  )\n\nexport default Database;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Database.js","import React from 'react';\n\nconst Doujin = () => (\n  <h2>Doujin module</h2>\n  )\n\nexport default Doujin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Doujin.js","import React from 'react';\nimport Dashboard from './Dashboard';\n\nconst Forum = () => (\n  <div>\n    <h2>Forum module</h2>\n    <Dashboard />\n  </div>\n  )\n\nexport default Forum;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Forum.js","import React from 'react';\n\nconst Reader = () => (\n  <h2>Reader module</h2>\n);\n\nexport default Reader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Reader.js","import React from 'react';\n\nconst Reviews = () => (\n  <h2>Reviews module</h2>\n);\n\nexport default Reviews;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Reviews.js","import React from 'react';\n\nconst SiteNews = () => (\n  <h2>Site news module</h2>\n);\n\nexport default SiteNews;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/SiteNews.js","// Component that demonstrates using a part of the Redux store\n// outside of Apollo.  We can use config.addReducer(key, reducer) in `src/app.js`\n// to add custom Redux reducers\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// HOC/decorator to listen to Redux store state\nimport { connect } from 'react-redux';\n\n// ----------------------\n\n// @connect accepts a function that takes the full Redux state, and then\n// returns the portion of state that our component cares about.  In this example,\n// we're listening to `state.counter`, which we can show inside the component\n@connect(state => ({ counter: state.counter }))\nexport default class ReduxCounter extends React.PureComponent {\n  static propTypes = {\n    counter: PropTypes.shape({\n      count: PropTypes.number.isRequired,\n    }),\n  };\n\n  static defaultProps = {\n    counter: {\n      count: 0,\n    },\n  }\n\n  // Trigger the `INCREMENT_COUNTER` action in Redux, to add 1 to the total.\n  // Note: by using the `= () {}` format, we're implicitly binding the component\n  // to `this`, which is why we can use @connect's `.dispatch()` function that's\n  // passed in as a prop\n  triggerIncrement = () => {\n    this.props.dispatch({\n      type: 'INCREMENT_COUNTER',\n    });\n  }\n\n  render() {\n    const { count } = this.props.counter;\n    return (\n      <div>\n        <h2>Listening to Redux counter: {count}</h2>\n        <button onClick={this.triggerIncrement}>Increment</button>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/redux.js","// Simple <Stats> component that displays our current environment.\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\n\n/* App */\n\n// Styles\nimport css from './stats.scss';\n\n// ----------------------\n\nexport default () => {\n  // We can pull the environment from `process.env.NODE_ENV`, which is set\n  // to either 'development' | 'production' on both the server and in the browser\n  const info = [\n    ['Environment', process.env.NODE_ENV],\n  ];\n\n  return (\n    <ul className={css.data}>\n      {info.map(([key, val]) => (\n        <li key={key}>{key}: <span>{val}</span></li>\n      ))}\n    </ul>\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/stats.js","module.exports = {\n\t\"data\": \"data-1TlbpCj5FlrOdqUTJqH60F\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/stats.scss\n// module id = 52\n// module chunks = 0","// Example of CSS, SASS and LESS styles being used together\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React from 'react';\n\n/* App */\n\n// Styles\nimport css from './styles.css';\nimport sass from './styles.scss';\nimport less from './styles.less';\n\n// ----------------------\n\nexport default () => (\n  <ul className={css.styleExamples}>\n    <li className={css.example}>Styled by CSS</li>\n    <li className={sass.example}>Styled by SASS</li>\n    <li className={less.example}>Styled by LESS</li>\n  </ul>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/styles/index.js","module.exports = {\n\t\"styleExamples\": \"styleExamples-1odAJW6hJJkT1H4az7KebJ\",\n\t\"example\": \"example-HDBhpRi1XOtosKy5rqCSL\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/styles.css\n// module id = 54\n// module chunks = 0","module.exports = {\n\t\"example\": \"example-3x1WZ3q5Zomb6qbpAqayqQ\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/styles.scss\n// module id = 55\n// module chunks = 0","module.exports = {\n\t\"example\": \"example-Qwu6EO0LZh1IVEfs-9zO_\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/styles.less\n// module id = 56\n// module chunks = 0","module.exports = {\n\t\"hello\": \"hello-3yYdKbSCZaFVyGKKMfKulk\",\n\t\"logo\": \"logo-pd8BfVR8JEOTwAIiOe-h2\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/main/main.scss\n// module id = 57\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/img/reactql-logo.7b90d212d7c2537aeffb13ed959c5491.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/main/reactql-logo.svg\n// module id = 58\n// module chunks = 0","// ----------------------\n// IMPORTS\n// Config API for adding reducers and configuring ReactQL app\nimport config from 'kit/config';\n\n/* REDUCERS */\nimport counterReducer from 'src/reducers/counter';\nimport loginModalReducer from 'src/reducers/login_modal';\n\n// ----------------------\n// ADDS\n// Add our custom `counter` reducer, with the initial state as a zero count.\n// Note:  The initial state (3rd param) will automatically be wrapped in\n// `seamless-immutable` by the kit's Redux init code, so plain objects are\n// automatically immutable by default\nconfig.addReducer('counter', counterReducer, { count: 0 });\nconfig.addReducer('loginModal', loginModalReducer, { show: false });\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/add_calls.js","// Sample reducer, showing how you can 'listen' to the `INCREMENT_COUNTER`\n// action, and update the counter state\n\n// Note: There's no need to specify default state, because the kit's Redux\n// init code wraps `undefined` state values in a `defaultReducer()` function,\n// that captures Redux sentinel vals and responds back with a black object --\n// so in our reducer functions, we can safely assume we're working with 'real'\n// immutable state\n\nexport default function reducer(state, action) {\n  if (action.type === 'INCREMENT_COUNTER') {\n    // Where did `state.merge()` come from?  Our plain state object is automatically\n    // wrapped in a call to `seamless-immutable` in our reducer init code,\n    // so we can use its functions to return a guaranteed immutable version\n    return state.merge({\n      count: state.count + 1,\n    });\n  }\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/counter.js","import { Map } from 'immutable';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE_MODAL':\n      // replace loginModal state with payload in TOGGLE_MODAL action\n      return action.payload; // TODO: verify that not using a more immutable struct here is ok\n    default:\n      return state;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/login_modal.js","module.exports = require(\"immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutable\"\n// module id = 62\n// module chunks = 0","// ----------------------\n// IMPORTS\n// Config API for adding reducers and configuring ReactQL app\nimport config from 'kit/config';\n\n// ----------------------\n// PROJECT CONFIGURATION\n\n// eslint-disable-next-line no-console\nconsole.log('project config being run');\n// eslint-disable-next-line no-console\nconsole.log(process.env);\n\n/* BACKEND */\nconst uriOptions = {\n  servers: {\n    development: '127.0.0.1:8000',\n    production: '',\n  },\n  slugs: {\n    graphql: 'gql',\n    jwtRetrieve: 'api-token-auth',\n  },\n};\n\n/* GRAPHQL */\n// TODO: add logic to determine graphql,jwt endpoint in docker for aws swarm\nif (process.env.NODE_ENV === 'development') {\n  config.setGraphQLEndpoint(\n    `http://${uriOptions.servers.development}/${uriOptions.slugs.graphql}/`\n  );\n  config.setJwtEndpoint(\n    `http://${uriOptions.servers.development}/${uriOptions.slugs.jwtRetrieve}/`\n  );\n  // eslint-disable-next-line no-console\n  console.log(`set graphql endpoint to ${config.graphQLEndpoint} in project config`);\n  // eslint-disable-next-line no-console\n  console.log(`set endpoint to retrieve jwt to ${config.jwtEndpoint} in project config`);\n}\n\n/* APOLLO */\n// TODO: figure out if setting this here is OK if network int.\n// is created before, in browser and server_*.js.\nconfig.setApolloNetworkOptions({\n  credentials: 'same-origin',\n})\n\n\n\n// WEBPACK FOOTER //\n// ./config/project.js","// ----------------------\n// IMPORTS\n// Config API for adding reducers and configuring ReactQL app\nimport config from 'kit/config';\n\n// ----------------------\n// SERVER CONFIGURATION\n\n// Set server config, by checking `SERVER` -- this code path will be\n// eliminated by Webpack in the browser bundle.\n\nif (SERVER) {\n  /* SSL */\n\n  // Leaving server as plain HTTP for now, since using Nginx upstream to handle\n  // HTTPS is recommmended. See config/example.js for explanation about options.\n\n  // const cert = require('src/cert/self_signed');\n  // config.enableSSL({ key: cert.key, cert: cert.cert });\n\n  /* CUSTOM ROUTES */\n\n  // Not enabling any custom routes at the moment. See config/example.js fmi.\n  // config.addGetRoute('/test', async ctx => {\n  //   ctx.body = `Body content here`;\n  // });\n\n  /* CUSTOM 404 HANDLER */\n\n  // custom 404 for server routes. see config/example.js fmi.\n\n  config.set404Handler(ctx => {\n    const stateDump = JSON.stringify(ctx.store.getState());\n    ctx.status = 404;\n    ctx.body = `This route does not exist on the server - Redux dump: ${stateDump}`;\n  });\n\n  /* CUSTOM ERROR HANDLER */\n\n  //  where `e` is the error thrown, `ctx` is the Koa context object.\n  // not incorporating third-party tools with next() yet.\n  // see config/example.js fmi.\n  config.setErrorHandler((e, ctx /* `next` is unused in this example */) => {\n    // eslint-disable-next-line no-console\n    console.log('Error: ', e.message);\n    ctx.body = `Some kind of error. Check your source code.\\n${e.message}`;\n  });\n\n  /* CUSTOM KOA APP INSTANTIATION */\n\n  // config of`app` outside of middleware/routing\n  // see config/example.js fmi & examples.\n  config.getKoaApp(app => {\n    // add new `engine` key to the app.context` prototype; used by middleware\n    // below to set a `Powered-By` header.\n    // eslint-disable-next-line no-param-reassign\n    app.context.engine = 'ReactQL';\n  });\n\n  /* CUSTOM MIDDLEWARE */\n\n  // Custom middleware to be processed on the server.\n  config.addMiddleware(async (ctx, next) => {\n    // custom header\n    ctx.set('Powered-By', ctx.engine); // <-- `ctx.engine` srt above!\n\n    // Redux action to manipulate the state on the server side.\n    ctx.store.dispatch({ type: 'INCREMENT_COUNTER' });\n\n    // Always return `next()`, otherwise the request won't 'pass' to the next\n    // middleware in the stack (likely, the React handler)\n    return next();\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config/server.js","// ----------------------\n// IMPORTS\n// Config API for adding reducers and configuring ReactQL app\nimport config from 'kit/config';\n\n// ----------------------\n// BROWSER CONFIGURATION\n\n// Set browsesr config, by checking `SERVER`\n\nif (!SERVER) {\n  /* APOLLO */\n  config.addApolloMiddleware((req, next) => {\n  // TODO: figure out if I should sync server or graphql store with localstorage\n  // for session-like purposes\n    if (!req.options.headers) {\n      req.options.headers = {};\n    }\n\n    const token = localStorage.getItem('token')\n      ? localStorage.getItem('token')\n      : null;\n\n    req.options.headers.authorization = `JWT ${token}`;\n\n    next();\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config/browser.js","/* eslint-disable no-underscore-dangle */\n\n/*\nCustom Redux store creation.  Along with the default Apollo store,\nwe can define custom reducers using `kit/config.addReducer()` which will\nbe available on the server and in the browser.\n\nStore state is wrapped by `seamless-immutable` to enforce a pattern of\nimmutability, to prevent weird side effects.\n*/\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport Immutable from 'seamless-immutable';\n\n/* Local */\nimport config from 'kit/config';\n\n// ----------------------\n\n// Detect if we're both in the browser, AND we have dehydrated state\nconst hasState = !!(!SERVER && window.__STATE__);\n\n// Helper function that 'unwinds' the `config.reducers` Map, and provides\n// the `reducer` function or `initialState` (wrapped in `seamless-immutable`)\n// depending on what we asked for\nfunction unwind(reducer = true) {\n  // Unwind `config.reducers`.  If we're looking for the `reducer`, we'll\n  // wrap this in a `defaultReducer` function that properly handles the Redux\n  // 'undefined' sentinel value, or calls 'real' reducer if it's not undefined.\n  //\n  // If we're not looking for reducers, it'll pull out the `initialState`\n  // variable instead, which we'll further process below\n  const r = Object.assign({},\n    ...[].concat([...config.reducers].map(arr => ({\n      [arr[0]]: reducer ? function defaultReducer(state, action) {\n        // If `state` === undefined, this is Redux sending a sentinel value\n        // to check our set-up.  So we'll send back a plain object to prove\n        // that we're properly handling our reducer\n        if (typeof state === 'undefined') return {};\n\n        // Otherwise, call our real reducer with the {state, action}\n        return arr[1].reducer(state, action);\n      } : arr[1].initialState,\n    }))),\n  );\n\n  // If this is a reducer, return at this point\n  if (reducer) return r;\n\n  // If not, we're looking for the state -- so let's map it and wrap the\n  // object in `seamless-immutable`, to avoid side-effects with Redux\n  return Object.assign({}, ...Object.keys(r).map(key => ({\n    [key]: Immutable((hasState && (window.__STATE__[key])) || r[key]),\n  })));\n}\n\nexport default function createNewStore(apolloClient) {\n  const store = createStore(\n    // By default, we'll use just the apollo reducer.  We can easily add our\n    // own here, for global store management outside of Apollo\n    combineReducers({\n      apollo: apolloClient.reducer(),\n      ...unwind(),\n    }),\n    // Initial server state, provided by the server.\n    {\n      apollo: (hasState && window.__STATE__.apollo) || {},\n      ...unwind(false),\n    },\n    compose(\n      applyMiddleware(\n        apolloClient.middleware(),\n        thunkMiddleware,\n      ),\n      // Enable Redux Devtools on the browser, for easy state debugging\n      // eslint-disable-next-line no-underscore-dangle\n      (!SERVER && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined') ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    ),\n  );\n\n  return store;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/redux.js","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 68\n// module chunks = 0","module.exports = require(\"redux-thunk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-thunk\"\n// module id = 69\n// module chunks = 0","module.exports = require(\"seamless-immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"seamless-immutable\"\n// module id = 70\n// module chunks = 0","/* eslint-disable react/no-danger, no-return-assign, no-param-reassign */\n\n// Component to render the full HTML response in React\n\n// ----------------------\n// IMPORTS\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ----------------------\n\nconst Html = ({ head, scripts, window, css, children }) => (\n  <html lang=\"en\" prefix=\"og: http://ogp.me/ns#\">\n    <head>\n      <meta charSet=\"utf-8\" />\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta httpEquiv=\"Content-Language\" content=\"en\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      {head.meta.toComponent()}\n      <link rel=\"stylesheet\" href={css} />\n      {head.title.toComponent()}\n    </head>\n    <body>\n      <div id=\"main\">{children}</div>\n      <script\n        dangerouslySetInnerHTML={{\n          __html: Object.keys(window).reduce(\n            (out, key) => out += `window.${key}=${JSON.stringify(window[key])};`,\n            ''),\n        }} />\n      {scripts.map(src => <script key={src} src={src} />)}\n    </body>\n  </html>\n);\n\nHtml.propTypes = {\n  head: PropTypes.object.isRequired,\n  window: PropTypes.object.isRequired,\n  scripts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  css: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Html;\n\n\n\n// WEBPACK FOOTER //\n// ./kit/views/ssr.js","// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Apollo client library\nimport { createNetworkInterface, ApolloClient } from 'react-apollo';\n\n/* ReactQL */\n\n// Configuration\nimport config from 'kit/config';\n\n// Get environment, to figure out where we're running the GraphQL server\nimport { getServerURL } from 'kit/lib/env';\n\n// ----------------------\n\n// Helper function to create a new Apollo client, by merging in\n// passed options alongside any set by `config.setApolloOptions` and defaults\nexport function createClient(opt = {}) {\n  return new ApolloClient(Object.assign({\n    reduxRootSelector: state => state.apollo,\n  }, config.apolloClientOptions, opt));\n}\n\n// Wrap `createNetworkInterface` to attach middleware\n// TODO: consider switching to createBatchingNetworkInterface, w/ settings to\n// match https://github.com/mbrochh/django-graphql-apollo-react-demo#=\nexport function getNetworkInterface(uri) {\n  const networkInterface = createNetworkInterface({\n    uri,\n    opts: config.apolloNetworkOptions,\n  });\n\n  // Couldn't get network requests to not return 400 bad error when I used this\n  // const networkInterface = createBatchingNetworkInterface({\n  //   uri: 'http://localhost:8000/gql', // same as uri\n  //   batchInterval: 10,\n  //   opts: {  // same as config.apolloNetworkOptions\n  //     credentials: 'same-origin',\n  //   },\n  // })\n\n  // Attach middleware\n  networkInterface.use(config.apolloMiddleware.map(f => ({ applyMiddleware: f })));\n  networkInterface.useAfter(config.apolloAfterware.map(f => ({ applyAfterware: f })));\n\n  return networkInterface;\n}\n\n// Creates a new browser client\nexport function browserClient() {\n  // If we have an internal GraphQL server, we need to append it with a\n  // call to `getServerURL()` to add the correct host (in dev + production)\n  const uri = config.graphQLServer\n    ? `${getServerURL()}${config.graphQLEndpoint}` : config.graphQLEndpoint;\n\n  return createClient({\n    networkInterface: getNetworkInterface(uri),\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/apollo.js","// ----------------------\n// IMPORTS\n\nconst path = require('path');\n\n// ----------------------\n\n// Parent folder = project root\nconst root = path.join(__dirname, '..');\n\nmodule.exports = {\n  // Root project folder.  This is the current dir.\n  root,\n\n  // Kit.  ReactQL starter kit code.  You can edit these files, but be\n  // aware that upgrading your starter kit could overwrite them\n  kit: path.join(root, 'kit'),\n\n  // Entry points.  This is where webpack will look for our browser.js,\n  // server.js and vendor.js files to start building\n  entry: path.join(root, 'kit', 'entry'),\n\n  // Webpack configuration files\n  webpack: path.join(root, 'kit', 'webpack'),\n\n  // Views for internal use\n  views: path.join(root, 'kit', 'views'),\n\n  // Source path; where we'll put our application files\n  src: path.join(root, 'src'),\n\n  // Static files.  HTML, images, etc that can be processed by Webpack\n  // before being moved into the final `dist` folder\n  static: path.join(root, 'static'),\n\n  // Dist path; where bundled assets will wind up\n  dist: path.join(root, 'dist'),\n\n  // Dist path for development; where dev assets will wind up\n  distDev: path.resolve(root, 'dist', 'dev'),\n\n  // Public.  This is where our web server will start looking to serve\n  // static files from\n  public: path.join(root, 'dist', 'public'),\n};\n\n\n\n// WEBPACK FOOTER //\n// ./config/paths.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 74\n// module chunks = 0","module.exports = require(\"koa-bodyparser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-bodyparser\"\n// module id = 75\n// module chunks = 0"],"sourceRoot":""}