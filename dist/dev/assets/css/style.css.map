{"version":3,"sources":["webpack:///./src/components/src/components/stats.scss","webpack:///./styles.css","webpack:///./src/components/styles/src/components/styles/styles.scss","webpack:///./styles.less","webpack:///./src/components/main/src/components/main/main.scss","webpack:///./styles.global.css"],"names":[],"mappings":"mEAGE,gCAEE,kCADA,mBASD,2CANG,gBALN,qCAQM,iCACA,CCNN,sCACE,kCAAkB,gBACA,SACR,SACC,CACX,yCACE,qBAAsB,YACR,CACf,+BAID,wBAA4B,CCf9B,gCACE,yBCHF,+BAAS,wBAAwB,CCQjC,iCAII,6BACA,eAHA,SAMF,0DACE,YCfiE,KAInE,SAAU,gCAC0B,eAFpC,SAAW,CAMX,QACE,6BAAgB","file":"assets/css/style.css","sourcesContent":["/* We can define as many top-level classes as we like, and they will all\nbe hashed in our HTML */\n.data {\n  li {\n    margin-bottom: 0.5em;\n    font-size: 1.4rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n    span {\n      font-style: italic;\n      font-weight: bold;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/src/components/stats.scss","/* Define some variables we might want to use elsewhere */\n:root {\n  --bg: #00bcd4;\n}\n\n.styleExamples {\n  font-size: 1.4rem;\n  font-weight: bold;\n  margin: 0;\n  padding: 0;\n  li {\n    list-style-type: none;\n    padding: 10px;\n  }\n}\n\n.example {\n  background-color: var(--bg);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./styles.css","$background: #ffc107;\n\n.example {\n  background-color: $background;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/styles/src/components/styles/styles.scss",".example{background-color:#ff4081}\n\n\n// WEBPACK FOOTER //\n// ./styles.less","/* Define some variables we might want to use elsewhere */\n:root {\n  --fg: #0b2296;\n}\n\n/* Implictly local.  .hello will get transformed into a hashed class in\nour React code, so that we could also use .hello in conjunction with another\ncomponent without the two clashing */\n.hello {\n  h1 {\n    margin: 0;\n    /* Variables can be injected into our resulting CSS */\n    color: var(--fg);\n    font-size: 4rem;\n  }\n  /* We can nest other classnames, too, which are automatically hashed */\n  .logo {\n    width: 250px;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/main/src/components/main/main.scss","/* Regular @import url statements work as you'd expect them to -- alternatively\nyou can import locally, and they wind up in the resulting bundle */\n@import url('https://fonts.googleapis.com/css?family=Gentium+Basic');\n\nhtml {\n  padding: 0;\n  border: 0;\n  font-family: 'Gentium Basic', serif;\n  font-size: 16px;\n\n  /* We can nest rules, thanks to cssnext */\n  li {\n    font-size: 2rem;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./styles.global.css"],"sourceRoot":""}