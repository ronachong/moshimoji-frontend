{"version":3,"sources":["webpack:///./kit/lib/routing.js","webpack:///./src/store/actions.js","webpack:///./src/components/modules/Dashboard.js","webpack:///./kit/entry/browser.js","webpack:///./src/app.js","webpack:///./src/components/main/index.js","webpack:///./kit/config.js","webpack:///./src/components/graphql.js","webpack:///./src/graphql/queries/all_user_statuses.gql","webpack:///./src/components/routes.js","webpack:///./src/components/main/index/LoginModal.js","webpack:///./src/components/main/index/DashboardLinkOrButton.js","webpack:///./src/components/reused/LinkOrButton.js","webpack:///./src/components/modules/all.js","webpack:///./src/components/modules/Database.js","webpack:///./src/components/modules/Doujin.js","webpack:///./src/components/modules/Forum.js","webpack:///./src/components/modules/Reader.js","webpack:///./src/components/modules/Reviews.js","webpack:///./src/components/modules/SiteNews.js","webpack:///./src/components/redux.js","webpack:///./src/components/stats.js","webpack:///./src/components/stats.scss","webpack:///./src/components/styles/index.js","webpack:///./src/components/styles/styles.css","webpack:///./src/components/styles/styles.scss","webpack:///./src/components/styles/styles.less","webpack:///./src/components/main/main.scss","webpack:///./src/components/main/reactql-logo.svg","webpack:///./src/reducers/add_calls.js","webpack:///./src/reducers/counter.js","webpack:///./src/reducers/login_modal.js","webpack:///./config/project.js","webpack:///./config/server.js","webpack:///./config/browser.js","webpack:///./src/styles.global.css","webpack:///./kit/lib/apollo.js","webpack:///./kit/lib/env.js","webpack:///./kit/lib/redux.js"],"names":["Status","props","code","children","staticContext","status","React","PureComponent","propTypes","PropTypes","number","isRequired","node","defaultProps","NotFound","Redirect","to","from","push","permanent","oneOfType","string","object","bool","toggleLoginModal","console","log","type","payload","show","Dashboard","userStatusFormMutation","userStatusFormQuery","UserStatusForm","data","mutate","loading","assert","currentUser","form","handleSubmit","e","preventDefault","FormData","variables","text","get","then","res","catch","err","ref","ApolloUserStatusForm","graphql","query","UserStatusesContainer","presentation","allUserStatuses","edges","shape","arrayOf","id","creationDate","ApolloUserStatusesContainer","UserStatusesPresentation","user_status_edges","map","user_status","client","browserClient","store","createNewStore","doRender","ReactDOM","hydrate","document","getElementById","Root","Chain","AppContainer","require","module","hot","accept","default","IndexContainer","name","content","css","hello","modules","SiteNews","Reader","Database","Forum","Reviews","Doujin","ApolloIndexContainer","Common","reducers","Map","apolloMiddleware","apolloAfterware","apolloNetworkOptions","apolloClientOptions","graphQLEndpoint","graphQLServer","jwtEndpoint","key","reducer","initialState","Error","set","endpoint","graphiQL","uri","middlewareFunc","afterwareFunc","opt","Config","routes","Set","koaAppFunc","enableHTTP","enableForceSSL","sslOptions","middleware","graphQLSchema","enableBodyParser","bodyParserOptions","corsOptions","func","cert","handler404","errorHandler","add","method","route","handlers","addRoute","schema","GraphQLMessage","isLoading","message","Home","Page","match","params","WhenNotFound","FADE_DURATION","styles","modal","position","zIndex","top","bottom","left","right","modalBackdrop","backgroundColor","opacity","modalTextContainer","width","height","transform","border","boxShadow","padding","textAlign","LoginModal","connect","loginModal","state","loginDest","fetch","config","body","json","resJson","token","localStorage","setItem","window","location","replace","dispatch","DashboardLinkOrButton","isLink","propsToPass","onClick","DisplayComponent","LinkOrButton","otherProps","ReduxCounter","counter","triggerIncrement","count","info","val","styleExamples","example","sass","less","addReducer","action","merge","uriOptions","servers","development","production","slugs","jwtRetrieve","setGraphQLEndpoint","setJwtEndpoint","setApolloNetworkOptions","credentials","set404Handler","stateDump","JSON","stringify","ctx","getState","setErrorHandler","getKoaApp","app","context","engine","addMiddleware","next","addApolloMiddleware","req","options","headers","getItem","authorization","createClient","Object","assign","reduxRootSelector","apollo","getNetworkInterface","networkInterface","createNetworkInterface","opts","use","applyMiddleware","f","useAfter","applyAfterware","getServerURL","host","port","allowSSL","stub","hasState","__STATE__","unwind","r","concat","arr","defaultReducer","keys","Immutable","apolloClient","createStore","combineReducers","compose","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"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","file":"browser.js","sourcesContent":["/* eslint-disable no-param-reassign */\n\n// ----------------------\n// IMPORTS\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect as ReactRouterRedirect } from 'react-router-dom';\n\n// ----------------------\n\n// <Status code=\"xxx\"> component.  Updates the context router's context, which\n// can be used by the server handler to respond to the status on the server.\nclass Status extends React.PureComponent {\n  static propTypes = {\n    code: PropTypes.number.isRequired,\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    children: null,\n  }\n\n  render() {\n    const { code, children } = this.props;\n    return (\n      <Route render={({ staticContext }) => {\n        if (staticContext) {\n          staticContext.status = code;\n        }\n        return children;\n      }} />\n    );\n  }\n}\n\n// <NotFound> component.  If this renders on the server in development mode,\n// it will attempt to proxyify the request to the upstream `webpack-dev-server`.\n// In production, it will issue a hard 404 and render.  In the browser, it will\n// simply render.\nexport class NotFound extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    children: null,\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Status code={404}>\n        {children}\n      </Status>\n    );\n  }\n}\n\n// <Redirect> component. Mirrors React Router's component by the same name,\n// except it sets a 301/302 status code for setting server-side HTTP headers.\nexport class Redirect extends React.PureComponent {\n  static propTypes = {\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n    from: PropTypes.string,\n    push: PropTypes.bool,\n    permanent: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    from: null,\n    push: false,\n    permanent: false,\n  }\n\n  render() {\n    const { to, from, push, permanent } = this.props;\n    const code = permanent ? 301 : 302;\n    return (\n      <Status code={code}>\n        <ReactRouterRedirect to={to} from={from} push={push} />\n      </Status>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/routing.js","export function toggleLoginModal(bool) {\n  console.log('toggleLoginModal being called');\n  return {\n    type: 'TOGGLE_MODAL',\n    payload: {\n      show: bool,\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/actions.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, graphql } from 'react-apollo';\n\nconst Dashboard = () => (\n  <div>\n    <h2>Dashboard</h2>\n    <ApolloUserStatusForm />\n    <ApolloUserStatusesContainer />\n  </div>\n);\n\nconst userStatusFormMutation = gql`\nmutation UserStatusForm($text: String!) {\n  createUserStatus(text: $text) {\n    reqStatus,\n    formErrors,\n    userStatus {\n      id\n    }\n  }\n}\n`;\n\nconst userStatusFormQuery = gql`\n{\n  currentUser {\n    id\n  }\n}\n`;\n\n\nconst UserStatusForm = ({ data, mutate }) => {\n  if (data.loading) {\n    return <div>Loading...</div>\n  }\n\n  console.assert(\n    data.currentUser,\n    'User status form accessed while user not logged in'\n  );\n\n  let form = null;\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(form);\n    const status = new FormData(form);\n    mutate({ variables: { text: status.get('text') } })\n      .then(res => {\n        if (res.status === 200) {\n          console.log('status submitted successfully');\n        }\n      })\n      .catch(err => {\n        console.log(`Network error: ${err}`);\n      });\n  };\n\n  return (\n    <div>\n      <h3>Update your status</h3>\n      <form\n        ref={ref => { form = ref; }}\n        onSubmit={e => handleSubmit(e)} >\n        <div>\n          <textarea name=\"text\" />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nlet ApolloUserStatusForm = graphql(userStatusFormQuery)(UserStatusForm);\nApolloUserStatusForm = graphql(userStatusFormMutation)(ApolloUserStatusForm);\n\nconst query = gql`\n{\n  allUserStatuses {\n    edges {\n      node {\n        id,\n        creationDate,\n        text\n      }\n    }\n  }\n}\n`;\n\n// I can create stateless functional components which receive data from apollo,\n// if I use the graphql(query)(component) pattern (instead of class decorator).\nconst UserStatusesContainer = ({ data }) => {\n  console.log(data);\n\n  if (data.loading) {\n    console.log(data);\n    return <div>Loading...</div>;\n  }\n\n  const presentation = (!data.allUserStatuses) ? <p>Error retrieving data</p> :\n    <UserStatusesPresentation user_status_edges={data.allUserStatuses.edges} />\n\n  if (!data.allUserStatuses) {\n    return <p>Error retrieving data</p>;\n  }\n\n  return (\n    <div>\n      <h3>User Statuses</h3>\n      {presentation}\n    </div>\n  );\n};\n\n\n// TODO: create a function to generate gql from proptypes or vice versa, or\n// from a common object (would I need to refer to schema for field types?),\n// if that will save me time\nUserStatusesContainer.propTypes = {\n  data: PropTypes.shape({\n    allUserStatuses: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          creationDate: PropTypes.string.isRequired,\n          text: PropTypes.string.isRequired,\n        }).isRequired,\n      }).isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nUserStatusesContainer.defaultProps = {\n  data: {\n    allUserStatuses: {\n      edges: [\n        {\n          node: {\n            id: 0,\n            creationDate: 'date str',\n            text: 'default text',\n          },\n        },\n      ],\n    },\n  },\n};\n\nconst ApolloUserStatusesContainer = graphql(query)(UserStatusesContainer);\n\nconst UserStatusesPresentation = ({ user_status_edges }) => {\n  return (\n    <div>\n      {user_status_edges.map(user_status => (\n        <p key={user_status.node.id}>\n          '{user_status.node.text}' created {user_status.node.creationDate}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nUserStatusesPresentation.propTypes = {\n  user_status_edges: PropTypes.arrayOf(PropTypes.shape({\n    node: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      creationDate: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired).isRequired,\n};\n\nexport default Dashboard;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Dashboard.js","// Browser entry point, for Webpack.  We'll grab the browser-flavoured\n// versions of React mounting, routing etc to hook into the DOM\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Enable async/await and generators, cross-browser\nimport 'regenerator-runtime/runtime';\n\n// Patch global.`fetch` so that Apollo calls to GraphQL work\nimport 'isomorphic-fetch';\n\n// React parts\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Browser routing\nimport { BrowserRouter } from 'react-router-dom';\n\n// Apollo Provider. This HOC will 'wrap' our React component chain\n// and handle injecting data down to any listening component\nimport { ApolloProvider } from 'react-apollo';\n\n/* ReactQL */\n\n// Root component.  This is our 'entrypoint' into the app.  If you're using\n// the ReactQL starter kit for the first time, `src/app.js` is where\n// you can start editing to add your own code.  Note:  This first is imported\n// first, since it sets up our app's settings\nimport App from 'src/app';\n\n// Grab the shared Apollo Client\nimport { browserClient } from 'kit/lib/apollo';\n\n// Custom redux store creator.  This will allow us to create a store 'outside'\n// of Apollo, so we can apply our own reducers and make use of the Redux dev\n// tools in the browser\nimport createNewStore from 'kit/lib/redux';\n\n// ----------------------\n\n// Create a new browser Apollo client\nconst client = browserClient();\n\n// Create a new Redux store\nconst store = createNewStore(client);\n\n// Create the 'root' entry point into the app.  If we have React hot loading\n// (i.e. if we're in development), then we'll wrap the whole thing in an\n// <AppContainer>.  Otherwise, we'll jump straight to the browser router\nfunction doRender() {\n  ReactDOM.hydrate(\n    <Root />,\n    document.getElementById('main'),\n  );\n}\n\n// The <Root> component.  We'll run this as a self-contained function since\n// we're using a bunch of temporary vars that we can safely discard.\n//\n// If we have hot reloading enabled (i.e. if we're in development), then\n// we'll wrap the whole thing in <AppContainer> so that our views can respond\n// to code changes as needed\nconst Root = (() => {\n  // Wrap the component hierarchy in <BrowserRouter>, so that our children\n  // can respond to route changes\n  const Chain = () => (\n    <ApolloProvider store={store} client={client}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n\n  // React hot reloading -- only enabled in development.  This branch will\n  // be shook from production, so we can run a `require` statement here\n  // without fear that it'll inflate the bundle size\n  if (module.hot) {\n    // <AppContainer> will respond to our Hot Module Reload (HMR) changes\n    // back from WebPack, and handle re-rendering the chain as needed\n    const AppContainer = require('react-hot-loader').AppContainer;\n\n    // Start our 'listener' at the root component, so that any changes that\n    // occur in the hierarchy can be captured\n    module.hot.accept('src/app', () => {\n      // Refresh the entry point of our app, to get the changes.\n\n      // eslint-disable-next-line\n      require('src/app').default;\n\n      // Re-render the hierarchy\n      doRender();\n    });\n\n    return () => (\n      <AppContainer>\n        <Chain />\n      </AppContainer>\n    );\n  }\n  return Chain;\n})();\n\ndoRender();\n\n\n\n// WEBPACK FOOTER //\n// ./kit/entry/browser.js","// Aapp's entry point.  Every ReactQL projects requires 'src/app.js',\n// which both the server and browser will import.\n//\n// In this file, two things happen:\n//\n// 1.  Import styles&configuration code in config/ & reducers/ to configure app.\n//\n// 2.  Export the root React component that goes between <div id=\"main\"/>\n// in the server-side HTML.\n\n// ----------------------\n// IMPORTS\n\n/* ReactQL */\n\n/* App */\n\n// Main component -- i.e. the 'root' React component in our app\n\nimport Main from 'src/components/main';\n\n// Init config\nimport 'src/reducers/add_calls';\nimport 'config/project';\nimport 'config/server';\nimport 'config/browser';\n\n// Init global styles.  These will be added to the resulting CSS automatically\n// without any class hashing.  Use this to include default or framework CSS.\nimport './styles.global.css';\n\n// ----------------------\n// export the root component we want to mount as the starting point to our app.\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","// Main React component, that we'll import in `src/app.js`\n//\n// Note a few points from this file:\n//\n// 1.  We're using the format `main/index.js` for this file, which means we\n// can simply import 'src/components/main', which will auto-default to index.js.\n// This is a useful pattern when you have styles/images to pull from, and you\n// want to keep the component tree organised.\n//\n// 2.  We import SASS and a logo SVG file directly.  Classnames will be hashed\n// automatically, and images will be compressed/optimised in production.  File\n// names that are made available in the import variable will be identical on\n// both the server and browser.\n//\n// 3.  We're introducing React Router in this component.  In RR v4, routes are\n// not defined globally-- they're defined declaratively on components, so we\n// can respond to route changes anywhere.\n//\n// 4.  We're using `react-helmet`, which allows us to set <head> data like\n// a <title> or <meta> tags, which are filtered up to the main <Html> component\n// before HTML rendering.\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\nimport { gql, graphql } from 'react-apollo';\n\n// Routing via React Router\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n// <Helmet> component for setting the page title/meta tags\nimport Helmet from 'react-helmet';\n\n/* ReactQL */\n\n// NotFound 404 handler for unknown routes\nimport { Redirect } from 'kit/lib/routing';\n\n/* App */\n\n// Child React components. Note:  We can either export one main React component\n// per file, or in the case of <Home>, <Page> and <WhenFound>, we can group\n// multiple components per file where it makes sense to do so\nimport GraphQLMessage from 'src/components/graphql';\nimport { Page, WhenNotFound } from 'src/components/routes';\nimport LoginModal from 'src/components/main/index/LoginModal';\nimport DashboardLinkOrButton from 'src/components/main/index/DashboardLinkOrButton';\nimport modules from 'src/components/modules/all';\n\nimport ReduxCounter from 'src/components/redux';\nimport Stats from 'src/components/stats';\nimport Styles from 'src/components/styles';\n\n// Styles\nimport css from './main.scss';\n\n// Get the ReactQL logo.  This is a local .svg file, which will be made\n// available as a string relative to [root]/dist/assets/img/\nimport logo from './reactql-logo.svg';\n\n// ----------------------\n\nconst query = gql`\n{\n  currentUser {\n    id\n  }\n}\n`;\n\nconst IndexContainer = ({ data }) => (\n  <div>\n    { /* -- meta */ }\n    <Helmet\n      title=\"moshimoji\"\n      meta={[{\n        name: 'description',\n        content: 'Community-driven platform to read, share, and publish manga and other comics.',\n      }]} />\n\n    { /* -- Modal */ }\n    <LoginModal\n      toggleModal={null} />\n\n    { /* -- header */ }\n    <div className={css.hello}>\n      <Link to=\"/\"><h1>moshimoji</h1></Link>\n    </div>\n    <hr />\n\n    { /* -- dashboard button */ }\n    <div className={css.hello}>\n      {\n        (data.loading || SERVER)\n        // TODO: use presentational component for first button\n        // TODO: make sure first button is grayed out when loading or initial react\n          ? <button onClick={console.log('dashboard button clicked while inactive')}>dashboard</button> :\n          <DashboardLinkOrButton currentUser={data.currentUser} />\n      }\n    </div>\n    <hr />\n    { /* -- nav */ }\n    <ul>\n      <li><Link to=\"/reader\">reader</Link></li>\n      <li><Link to=\"/database\">database</Link></li>\n      <li><Link to=\"/forum\">forum</Link></li>\n      <li><Link to=\"/reviews\">reviews</Link></li>\n      <li><Link to=\"/doujin\">doujin</Link></li>\n      <li><Link to=\"/page/example\">Example page</Link></li>\n      <li><Link to=\"/old/path\">Redirect from /old/path &#8594; /new/path</Link></li>\n    </ul>\n    <hr />\n\n    { /* -- hm */ }\n    <Switch>\n      <Route exact path=\"/\" component={modules.SiteNews} />\n      <Route path=\"/dashboard\" component={modules.Dashboard} />\n      <Route path=\"/reader\" component={modules.Reader} />\n      <Route path=\"/database\" component={modules.Database} />\n      <Route path=\"/forum\" component={modules.Forum} />\n      <Route path=\"/reviews\" component={modules.Reviews} />\n      <Route path=\"/doujin\" component={modules.Doujin} />\n      <Route path=\"/page/:name\" component={Page} />\n      <Redirect from=\"/old/path\" to=\"/new/path\" />\n      <Route component={WhenNotFound} />\n    </Switch>\n    <hr />\n\n    { /* -- message component */ }\n    <GraphQLMessage />\n    <hr />\n\n    { /* -- counter component */ }\n    <ReduxCounter />\n    <hr />\n\n    { /* -- runtime info */ }\n    <p>Runtime info:</p>\n    <Stats />\n    <hr />\n\n    { /* -- styles info */ }\n    <p>Stylesheet examples:</p>\n    <Styles />\n  </div>\n);\n\nconst ApolloIndexContainer = graphql(query)(IndexContainer);\n\nexport default ApolloIndexContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/main/index.js","// Simple class to act as a singleton for app-wide configuration.\n\n// We'll start with a common config that can be extended separately by the\n// server/client, to provide environment-specific functionality\nclass Common {\n  constructor() {\n    // Store reducers in a `Map`, for easy key retrieval\n    this.reducers = new Map();\n\n    // Apollo (middle|after)ware\n    this.apolloMiddleware = [];\n    this.apolloAfterware = [];\n    this.apolloNetworkOptions = {};\n    this.apolloClientOptions = {};\n\n    // GraphQL endpoint.  This needs setting via either `config.enableGraphQLServer()`\n    // or `config.setGraphQLEndpoint()`\n    this.graphQLEndpoint = null;\n\n    // Set to true if we're using an internal GraphQL server\n    this.graphQLServer = false;\n\n    // Endpoint to retrieve jwt token. This needs setting via config.setJwtEndpoint()`\n    this.jwtEndpoint = null;\n  }\n\n  /* REDUX */\n\n  // Adds a new reducer.  Accepts a `key` string, a `reducer` function, and a\n  // (by default empty) `initialState` object, which will ultimately become immutable\n  addReducer(key, reducer, initialState = {}) {\n    if (typeof reducer !== 'function') {\n      throw new Error(`Can't add reducer for '${key}' - reducer must be a function`);\n    }\n    this.reducers.set(key, {\n      reducer,\n      initialState,\n    });\n  }\n\n  /* GRAPHQL */\n\n  // Enables internal GraphQL server.  Default GraphQL and GraphiQL endpoints\n  // can be overridden\n  enableGraphQLServer(endpoint = '/graphql', graphiQL = true) {\n    this.graphQLServer = true;\n    this.graphQLEndpoint = endpoint;\n    this.graphiQL = graphiQL;\n  }\n\n  // Set an external GraphQL URI for use with Apollo\n  setGraphQLEndpoint(uri, graphiQL = true) {\n    this.graphQLEndpoint = uri;\n    this.graphiQL = graphiQL;\n  }\n\n  // Set a URI to retrieve jwt tokens for auth\n  setJwtEndpoint(uri) {\n    this.jwtEndpoint = uri;\n  }\n\n  // Register Apollo middleware function\n  addApolloMiddleware(middlewareFunc) {\n    this.apolloMiddleware.push(middlewareFunc);\n  }\n\n  // Register Apollo afterware function\n  addApolloAfterware(afterwareFunc) {\n    this.apolloAfterware.push(afterwareFunc);\n  }\n\n  // Apollo Client options.  These will be merged in with the `createClient`\n  // default options defined in `kit/lib/apollo.js`\n  setApolloClientOptions(opt = {}) {\n    this.apolloClientOptions = opt;\n  }\n\n  // Apollo Network options.  These will be merged in with the `createNetworkInterface`\n  // default options defined in `kit/lib/apollo.js`\n  setApolloNetworkOptions(opt = {}) {\n    this.apolloNetworkOptions = opt;\n  }\n}\n\n// Placeholder for the class we'll attach\nlet Config;\n\n// Server Config extensions.  This is wrapped in a `SERVER` block to avoid\n// adding unnecessary functionality to the client bundle.  Every byte counts!\nif (SERVER) {\n  Config = class ServerConfig extends Common {\n    constructor() {\n      super();\n      // Create a set for routes -- to retrieve based on insertion order\n      this.routes = new Set();\n\n      // Koa application function. But default, this is null\n      this.koaAppFunc = null;\n\n      // Flag for setting whether plain HTTP should be disabled\n      this.enableHTTP = true;\n\n      // Force SSL. Rewrites all non-SSL queries to SSL.  False, by default.\n      this.enableForceSSL = false;\n\n      // Options for enabling SSL. By default, this is null. If SSL is enabled\n      // in userland, this would instead hold an object of options\n      this.sslOptions = null;\n\n      // Custom middleware -- again, based on insertion order\n      this.middleware = new Set();\n\n      // GraphQL schema (if we're using an internal server)\n      this.graphQLSchema = null;\n\n      // Attach a GraphiQL IDE endpoint to our server?  By default - no.  If\n      // this === true, this will default to `/graphql`.  If it's a string, it'll\n      // default to the string value\n      this.graphiQL = false;\n\n      // Enable body parsing by default.  Leave `koa-bodyparser` opts as default\n      this.enableBodyParser = true;\n      this.bodyParserOptions = {};\n\n      // CORS options for `koa-cors`\n      this.corsOptions = {};\n    }\n\n    /* WEB SERVER / SSR */\n\n    // Get access to Koa's `app` instance, for adding custom instantiation\n    // or doing something that's not covered by other functions\n    getKoaApp(func) {\n      this.koaAppFunc = func;\n    }\n\n    // Enable SSL. Normally, you'd use an upstream proxy like Nginx to handle\n    // SSL. But if you want to run a 'bare' Koa HTTPS web server, you can pass\n    // in the certificate details here and it'll respond to SSL requests\n    enableSSL(opt) {\n      // At a minimum, we should have `key` and `cert` -- check for those\n      if (typeof opt !== 'object' || !opt.key || !opt.cert) {\n        throw new Error('Cannot enable SSL. Missing `key` and/or `cert`');\n      }\n      this.sslOptions = opt;\n    }\n\n    // Force SSL. Rewrites all non-SSL queries to SSL. Any options here are\n    // passed to `koa-sslify`, the SSL enforcement middleware\n    forceSSL(opt = {}) {\n      this.enableForceSSL = opt;\n    }\n\n    // Disable plain HTTP.  Note this should only be used if you've also set\n    // `enableSSL()` and you don't want dual-HTTP+SSL config\n    disableHTTP() {\n      this.enableHTTP = false;\n    }\n\n    // Disable the optional `koa-bodyparser`, to prevent POST data being sent to\n    // each request.  By default, body parsing is enabled.\n    disableBodyParser() {\n      this.enableBodyParser = false;\n    }\n\n    setBodyParserOptions(opt = {}) {\n      this.bodyParserOptions = opt;\n    }\n\n    // 404 handler for the server.  By default, `kit/entry/server.js` will\n    // simply return a 404 status code without modifying the HTML render.  By\n    // setting a handler here, this will be returned instead\n    set404Handler(func) {\n      if (typeof func !== 'function') {\n        throw new Error('404 handler must be a function');\n      }\n      this.handler404 = func;\n    }\n\n    // Error handler.  If this isn't defined, the server will simply return a\n    // 'There was an error. Please try again later.' message, and log the output\n    // to the console.  Override that behaviour by passing a (e, ctx, next) -> {} func\n    setErrorHandler(func) {\n      if (typeof func !== 'function') {\n        throw new Error('Error handler must be a function');\n      }\n      this.errorHandler = func;\n    }\n\n    // Add custom middleware.  This should be an async func, for use with Koa\n    addMiddleware(middlewareFunc) {\n      this.middleware.add(middlewareFunc);\n    }\n\n    // Adds a custom server route to attach to our Koa router\n    addRoute(method, route, ...handlers) {\n      this.routes.add({\n        method,\n        route,\n        handlers,\n      });\n    }\n\n    // Adds custom GET route\n    addGetRoute(route, ...handlers) {\n      this.addRoute('get', route, ...handlers);\n    }\n\n    // Adds custom POST route\n    addPostRoute(route, ...handlers) {\n      this.addRoute('post', route, ...handlers);\n    }\n\n    // Adds custom PUT route\n    addPutRoute(route, ...handlers) {\n      this.addRoute('put', route, ...handlers);\n    }\n\n    // Adds custom PATCH route\n    addPatchRoute(route, ...handlers) {\n      this.addRoute('patch', route, ...handlers);\n    }\n\n    // Adds custom DELETE route\n    addDeleteRoute(route, ...handlers) {\n      this.addRoute('delete', route, ...handlers);\n    }\n\n    // Set the GraphQL schema. This should only be called on the server, otherwise\n    // the bundle size passed by the `schema` object will be unnecessarily inflated\n    setGraphQLSchema(schema) {\n      this.graphQLSchema = schema;\n    }\n\n    // CORS options, for `koa-cors` instantiation\n    setCORSOptions(opt = {}) {\n      this.corsOptions = opt;\n    }\n  };\n} else {\n  // For the client config, we'll extend `Common` by default -- but if we need\n  // anything unique to the browser in the future, we'd add it here...\n  Config = class ClientConfig extends Common {};\n}\n\n// Since there's only one `Config` instance globally, we'll create the new\n// instance here and export it.  This will then provide any subsequent imports\n// with the same object, so we can add settings to a common config\nexport default new Config();\n\n\n\n// WEBPACK FOOTER //\n// ./kit/config.js","// Now, let's create a GraphQL-enabled component...\n\n// ... then, let's create the component and decorate it with the `graphql`\n// HOC that will automatically populate `this.props` with the query data\n// once the GraphQL API request has been completed\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// GraphQL\nimport { graphql } from 'react-apollo';\n\n/* App */\n\n// GraphQL queries.  Looking at this file demonstrates how to import fragments.\n// Webpack will compile this into inline GraphQL for us, so we can pass the\n// query to components using the @graphql decorator\n//import allMessages from 'src/graphql/queries/all_messages.gql';\nimport allUserStatuses from 'src/graphql/queries/all_user_statuses.gql';\n\n// ----------------------\n\n// Since this component needs to 'listen' to GraphQL data, we wrap it in\n// `react-apollo`'s `graphql` HOC/decorator and pass in the query that this\n// component requires.   Note: This is not to be confused with the `graphql`\n// lib, which is used on the server-side to initially define the schema\n@graphql(allUserStatuses)\nexport default class GraphQLMessage extends React.PureComponent {\n  // TODO: create a function to generate gql from proptypes or vice versa, or\n  // from a common object (would I need to refer to schema for field types?),\n  // if that will save me time\n\n  static propTypes = {\n    data: PropTypes.shape({\n      allUserStatuses: PropTypes.shape({\n        edges: PropTypes.arrayOf(PropTypes.shape({\n          node: PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            text: PropTypes.string.isRequired,\n          }).isRequired\n        }).isRequired).isRequired\n      }).isRequired,\n    }).isRequired,\n  }\n\n  static defaultProps = {\n    data: {\n      allUserStatuses: {\n        edges: [\n          {\n            node: {\n              id: 0,\n              text: 'default text',\n            }\n          }\n        ]\n      },\n    },\n  }\n\n  render() {\n    const { data } = this.props;\n    // Since we're dealing with async GraphQL data, we defend against the\n    // data not yet being loaded by checking to see that we have the `message`\n    // key on our returned object\n    //   const message = data.message && data.message.text;\n    // TODO: understand how this line^ works\n\n    // Apollo will tell us whether we're still loading.  We can also use this\n    // check to ensure we have a fully returned response\n    const isLoading = data.loading ? 'yes' : 'nope';\n    const message = (isLoading == 'nope') ?\n      data.allUserStatuses.edges[0].node.text : 'None'\n    return (\n      <div>\n        <h2>Message from GraphQL server: <em>{message}</em></h2>\n        <h2>Currently loading?: {isLoading}</h2>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/graphql.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"allUserStatuses\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"edges\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"node\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null},{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"text\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":98}};\n    doc.loc.source = {\"body\":\"query {\\n  allUserStatuses {\\n    edges {\\n      node {\\n        id,\\n        text\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \nmodule.exports = doc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/queries/all_user_statuses.gql\n// module id = 318\n// module chunks = 0","// Demonstrates several components on one page, each with their own `export`.\n//\n// These are smaller components that <Main> imports, and changes depending\n// on the page route (via React Router).\n//\n// <WhenNotFound> demonstrates the use of <NotFound>, a ReactQL helper\n// component that signals to our web server that we have a 404 error, to handle\n// accordingly\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* ReactQL */\n\n// NotFound 404 handler for unknown routes\nimport { NotFound } from 'kit/lib/routing';\n\n// ----------------------\n\n// We'll display this <Home> component when we're on the / route\nexport const Home = () => (\n  <h1>You&apos;re on the home page - click another link above</h1>\n);\n\n// Helper component that will be conditionally shown when the route matches.\n// This gives you an idea how React Router v4 works -- we have a `match`\n// prop that gives us information on the route we can use within the component\nexport const Page = ({ match }) => (\n  <h1>Changed route: {match.params.name}</h1>\n);\n\n// Specify PropTypes if the `match` object, which is injected to props by\n// the <Route> component\nPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object,\n  }).isRequired,\n};\n\n// Create a route that will be displayed when the code isn't found\nexport const WhenNotFound = () => (\n  <NotFound>\n    <h1>Unknown route - the 404 handler was triggered!</h1>\n  </NotFound>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/routes.js","// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// HOC/decorator to listen to Redux store state\nimport { connect } from 'react-redux';\n\nimport { Modal, Transition } from 'react-bootstrap';\n\nimport config from 'kit/config';\nimport { toggleLoginModal } from '../../../store/actions';\n\n// ----------------------\n// STYLING\nconst FADE_DURATION = 200;\n\nconst styles = {\n  modal : {\n    position: 'fixed',\n    zIndex: 1040,\n    top: 0, bottom: 0, left: 0, right: 0,\n  },\n  modalBackdrop : {\n    position: 'fixed',\n    top: 0, bottom: 0, left: 0, right: 0,\n    zIndex: 'auto',\n    backgroundColor:'#000',\n    opacity: 0.5\n  },\n  modalTextContainer : {\n    position: 'absolute',\n    width: '50%',\n    height: '50%',\n    top: '50%', left: '50%',\n    transform: `translate(-${50}%, -${50}%)`,\n    border: '1px solid #fff555',\n    backgroundColor: 'white',\n    boxShadow: '0 5px 15px rgba(0,0,0,.5)',\n    padding: 20,\n    textAlign: 'center'\n  }\n};\n\n// -----------------------\n// REDUX\n\n// @connect accepts a function that takes the full Redux state, and then\n// returns the portion of state that our component cares about.  In this example,\n// we're listening to `state.counter`, which we can show inside the component\n@connect(state => ({ loginModal: state.loginModal }))\nclass LoginModal extends Component {\n  static propTypes = {\n    // counter: PropTypes.shape({\n    //   count: PropTypes.number.isRequired,\n    // }),\n  };\n\n  static defaultProps = {\n    // counter: {\n    //   count: 0,\n    // },\n  }\n\n  handleSubmit(loginDest, e) {\n    e.preventDefault()\n    const data = new FormData(this.form);\n    fetch(config.jwtEndpoint, {\n      method: 'POST',\n      body: data,\n    })\n      .then(res => {\n        res.json().then(resJson => {\n          if (resJson.token) {\n            localStorage.setItem('token', resJson.token);\n            window.location.replace(loginDest);\n          }\n        });\n      })\n      .catch(err => {\n        console.log(`Network error: ${err}`);\n      });\n  }\n\n  render() {\n    // TODO: add logic to compute destination dynamically.\n    // can be dashboard or home/site news, depending on origin\n    // of modal (dashboard button or link preceding)\n    const loginDest = '/dashboard'\n\n    return (\n      // <Transition\n      //   in={true}\n      //   timeout={FADE_DURATION}\n      //   className='fade'\n      //   enteredClassName='in'\n      //   enteringClassName='in'>\n        <Modal\n          show={this.props.loginModal.show}\n          onHide={() => {this.props.dispatch(toggleLoginModal(false))}}\n          style={styles.modal}\n          backdropStyle={styles.modalBackdrop}>\n          <Modal.Body style={styles.modalTextContainer}>\n            <form\n              ref={ref => (this.form = ref)}\n              onSubmit={e => this.handleSubmit(loginDest, e)}\n            >\n              <div>\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" />\n              </div>\n              <div>\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" />\n              </div>\n              <button type=\"submit\">Login</button>\n            </form>\n          </Modal.Body>\n        </Modal>\n      // </Transition>\n    );\n  }\n}\n\nexport default LoginModal;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/main/index/LoginModal.js","// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React from 'react';\n\n// HOC/decorator to listen to Redux store state\nimport { connect } from 'react-redux';\n\n// components\nimport LinkOrButton from 'src/components/reused/LinkOrButton';\n\n// Redux actions\nimport { toggleLoginModal } from '../../../store/actions';\n\n\n// ----------------------\n// COMPONENT\n// TODO: figure out if this can/should be rewritten as a stateless functional\n// component, even if it needs the the dispatch prop (don't think I can use an\n// es6 class decorator with a functional component, so can't use @connect)\n// TODO: consider refactoring this and LinkOrButton;\n// does it make sense to store things as class attrs?\n// does propsToPass really make sense?\n// or can I simply just pass uri, onclick separately?\n// should the isLink logic be moved elswhere?\n@connect()\nclass DashboardLinkOrButton extends React.PureComponent {\n  static propTypes = {\n    // counter: PropTypes.shape({\n    //   count: PropTypes.number.isRequired,\n    // }),\n  };\n\n  static defaultProps = {\n    // counter: {\n    //   count: 0,\n    // },\n  }\n\n  constructor(props) {\n    super(props);\n    // TODO: figure out if this should be setState instead\n    if (this.props.currentUser) {\n      this.isLink = true;\n      this.propsToPass = {\n        uri: '/dashboard/site',\n      };\n    } else {\n      this.isLink = false;\n      this.propsToPass = {\n        onClick: () => {\n          console.log('dashboard button was clicked');\n          this.props.dispatch(toggleLoginModal(true));\n        }\n      };\n    }\n  }\n\n  render() {\n    const DisplayComponent = ({ onClick }) => (\n      <button onClick={onClick}>dashboard</button>\n    );\n\n    return (\n      <LinkOrButton\n        DisplayComponent={DisplayComponent}\n        isLink={this.isLink}\n        propsToPass={this.propsToPass} />\n    );\n  }\n}\n\nexport default DashboardLinkOrButton;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/main/index/DashboardLinkOrButton.js","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// <LinkOrButton displayComponent={const} onClick= />\nconst LinkOrButton = ({ DisplayComponent, isLink, propsToPass }) => {\n  if (isLink) {\n    const { uri, otherProps } = propsToPass;\n    return <Link to={uri}><DisplayComponent props={otherProps} /></Link>;\n  }\n\n  const { onClick, otherProps } = propsToPass;\n  console.log('LinkOrButton');\n  console.log(onClick);\n  console.log(propsToPass);\n  return <DisplayComponent onClick={onClick} props={otherProps} />;\n};\n\nexport default LinkOrButton;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/reused/LinkOrButton.js","import Dashboard from 'src/components/modules/Dashboard';\nimport Database from 'src/components/modules/Database';\nimport Doujin from 'src/components/modules/Doujin';\nimport Forum from 'src/components/modules/Forum';\nimport Reader from 'src/components/modules/Reader';\nimport Reviews from 'src/components/modules/Reviews';\nimport SiteNews from 'src/components/modules/SiteNews';\n\nconst modules = {\n  Dashboard,\n  Database,\n  Doujin,\n  Forum,\n  Reader,\n  Reviews,\n  SiteNews,\n};\n\nexport default modules;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/all.js","import React from 'react';\n\nconst Database = () => (\n  <h2>Database module</h2>\n  )\n\nexport default Database;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Database.js","import React from 'react';\n\nconst Doujin = () => (\n  <h2>Doujin module</h2>\n  )\n\nexport default Doujin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Doujin.js","import React from 'react';\nimport Dashboard from './Dashboard';\n\nconst Forum = () => (\n  <div>\n    <h2>Forum module</h2>\n    <Dashboard />\n  </div>\n  )\n\nexport default Forum;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Forum.js","import React from 'react';\n\nconst Reader = () => (\n  <h2>Reader module</h2>\n);\n\nexport default Reader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Reader.js","import React from 'react';\n\nconst Reviews = () => (\n  <h2>Reviews module</h2>\n);\n\nexport default Reviews;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/Reviews.js","import React from 'react';\n\nconst SiteNews = () => (\n  <h2>Site news module</h2>\n);\n\nexport default SiteNews;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/SiteNews.js","// Component that demonstrates using a part of the Redux store\n// outside of Apollo.  We can use config.addReducer(key, reducer) in `src/app.js`\n// to add custom Redux reducers\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// HOC/decorator to listen to Redux store state\nimport { connect } from 'react-redux';\n\n// ----------------------\n\n// @connect accepts a function that takes the full Redux state, and then\n// returns the portion of state that our component cares about.  In this example,\n// we're listening to `state.counter`, which we can show inside the component\n@connect(state => ({ counter: state.counter }))\nexport default class ReduxCounter extends React.PureComponent {\n  static propTypes = {\n    counter: PropTypes.shape({\n      count: PropTypes.number.isRequired,\n    }),\n  };\n\n  static defaultProps = {\n    counter: {\n      count: 0,\n    },\n  }\n\n  // Trigger the `INCREMENT_COUNTER` action in Redux, to add 1 to the total.\n  // Note: by using the `= () {}` format, we're implicitly binding the component\n  // to `this`, which is why we can use @connect's `.dispatch()` function that's\n  // passed in as a prop\n  triggerIncrement = () => {\n    this.props.dispatch({\n      type: 'INCREMENT_COUNTER',\n    });\n  }\n\n  render() {\n    const { count } = this.props.counter;\n    return (\n      <div>\n        <h2>Listening to Redux counter: {count}</h2>\n        <button onClick={this.triggerIncrement}>Increment</button>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/redux.js","// Simple <Stats> component that displays our current environment.\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\n\n/* App */\n\n// Styles\nimport css from './stats.scss';\n\n// ----------------------\n\nexport default () => {\n  // We can pull the environment from `process.env.NODE_ENV`, which is set\n  // to either 'development' | 'production' on both the server and in the browser\n  const info = [\n    ['Environment', process.env.NODE_ENV],\n  ];\n\n  return (\n    <ul className={css.data}>\n      {info.map(([key, val]) => (\n        <li key={key}>{key}: <span>{val}</span></li>\n      ))}\n    </ul>\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/stats.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"data\":\"data-1TlbpCj5FlrOdqUTJqH60F\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/stats.scss\n// module id = 501\n// module chunks = 0","// Example of CSS, SASS and LESS styles being used together\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React from 'react';\n\n/* App */\n\n// Styles\nimport css from './styles.css';\nimport sass from './styles.scss';\nimport less from './styles.less';\n\n// ----------------------\n\nexport default () => (\n  <ul className={css.styleExamples}>\n    <li className={css.example}>Styled by CSS</li>\n    <li className={sass.example}>Styled by SASS</li>\n    <li className={less.example}>Styled by LESS</li>\n  </ul>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/styles/index.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"styleExamples\":\"styleExamples-1odAJW6hJJkT1H4az7KebJ\",\"example\":\"example-HDBhpRi1XOtosKy5rqCSL\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/styles.css\n// module id = 503\n// module chunks = 0","// removed by extract-text-webpack-plugin\nmodule.exports = {\"example\":\"example-3x1WZ3q5Zomb6qbpAqayqQ\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/styles.scss\n// module id = 504\n// module chunks = 0","// removed by extract-text-webpack-plugin\nmodule.exports = {\"example\":\"example-Qwu6EO0LZh1IVEfs-9zO_\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/styles.less\n// module id = 505\n// module chunks = 0","// removed by extract-text-webpack-plugin\nmodule.exports = {\"hello\":\"hello-3yYdKbSCZaFVyGKKMfKulk\",\"logo\":\"logo-pd8BfVR8JEOTwAIiOe-h2\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/main/main.scss\n// module id = 506\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/img/reactql-logo.7b90d212d7c2537aeffb13ed959c5491.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/main/reactql-logo.svg\n// module id = 507\n// module chunks = 0","// ----------------------\n// IMPORTS\n// Config API for adding reducers and configuring ReactQL app\nimport config from 'kit/config';\n\n/* REDUCERS */\nimport counterReducer from 'src/reducers/counter';\nimport loginModalReducer from 'src/reducers/login_modal';\n\n// ----------------------\n// ADDS\n// Add our custom `counter` reducer, with the initial state as a zero count.\n// Note:  The initial state (3rd param) will automatically be wrapped in\n// `seamless-immutable` by the kit's Redux init code, so plain objects are\n// automatically immutable by default\nconfig.addReducer('counter', counterReducer, { count: 0 });\nconfig.addReducer('loginModal', loginModalReducer, { show: false });\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/add_calls.js","// Sample reducer, showing how you can 'listen' to the `INCREMENT_COUNTER`\n// action, and update the counter state\n\n// Note: There's no need to specify default state, because the kit's Redux\n// init code wraps `undefined` state values in a `defaultReducer()` function,\n// that captures Redux sentinel vals and responds back with a black object --\n// so in our reducer functions, we can safely assume we're working with 'real'\n// immutable state\n\nexport default function reducer(state, action) {\n  if (action.type === 'INCREMENT_COUNTER') {\n    // Where did `state.merge()` come from?  Our plain state object is automatically\n    // wrapped in a call to `seamless-immutable` in our reducer init code,\n    // so we can use its functions to return a guaranteed immutable version\n    return state.merge({\n      count: state.count + 1,\n    });\n  }\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/counter.js","import { Map } from 'immutable';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE_MODAL':\n      // replace loginModal state with payload in TOGGLE_MODAL action\n      return action.payload; // TODO: verify that not using a more immutable struct here is ok\n    default:\n      return state;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/login_modal.js","// ----------------------\n// IMPORTS\n// Config API for adding reducers and configuring ReactQL app\nimport config from 'kit/config';\n\n// ----------------------\n// PROJECT CONFIGURATION\n\n// eslint-disable-next-line no-console\nconsole.log('project config being run');\n// eslint-disable-next-line no-console\nconsole.log(process.env);\n\n/* BACKEND */\nconst uriOptions = {\n  servers: {\n    development: '127.0.0.1:8000',\n    production: '',\n  },\n  slugs: {\n    graphql: 'gql',\n    jwtRetrieve: 'api-token-auth',\n  },\n};\n\n/* GRAPHQL */\n// TODO: add logic to determine graphql,jwt endpoint in docker for aws swarm\nif (process.env.NODE_ENV === 'development') {\n  config.setGraphQLEndpoint(\n    `http://${uriOptions.servers.development}/${uriOptions.slugs.graphql}/`\n  );\n  config.setJwtEndpoint(\n    `http://${uriOptions.servers.development}/${uriOptions.slugs.jwtRetrieve}/`\n  );\n  // eslint-disable-next-line no-console\n  console.log(`set graphql endpoint to ${config.graphQLEndpoint} in project config`);\n  // eslint-disable-next-line no-console\n  console.log(`set endpoint to retrieve jwt to ${config.jwtEndpoint} in project config`);\n}\n\n/* APOLLO */\n// TODO: figure out if setting this here is OK if network int.\n// is created before, in browser and server_*.js.\nconfig.setApolloNetworkOptions({\n  credentials: 'same-origin',\n})\n\n\n\n// WEBPACK FOOTER //\n// ./config/project.js","// ----------------------\n// IMPORTS\n// Config API for adding reducers and configuring ReactQL app\nimport config from 'kit/config';\n\n// ----------------------\n// SERVER CONFIGURATION\n\n// Set server config, by checking `SERVER` -- this code path will be\n// eliminated by Webpack in the browser bundle.\n\nif (SERVER) {\n  /* SSL */\n\n  // Leaving server as plain HTTP for now, since using Nginx upstream to handle\n  // HTTPS is recommmended. See config/example.js for explanation about options.\n\n  // const cert = require('src/cert/self_signed');\n  // config.enableSSL({ key: cert.key, cert: cert.cert });\n\n  /* CUSTOM ROUTES */\n\n  // Not enabling any custom routes at the moment. See config/example.js fmi.\n  // config.addGetRoute('/test', async ctx => {\n  //   ctx.body = `Body content here`;\n  // });\n\n  /* CUSTOM 404 HANDLER */\n\n  // custom 404 for server routes. see config/example.js fmi.\n\n  config.set404Handler(ctx => {\n    const stateDump = JSON.stringify(ctx.store.getState());\n    ctx.status = 404;\n    ctx.body = `This route does not exist on the server - Redux dump: ${stateDump}`;\n  });\n\n  /* CUSTOM ERROR HANDLER */\n\n  //  where `e` is the error thrown, `ctx` is the Koa context object.\n  // not incorporating third-party tools with next() yet.\n  // see config/example.js fmi.\n  config.setErrorHandler((e, ctx /* `next` is unused in this example */) => {\n    // eslint-disable-next-line no-console\n    console.log('Error: ', e.message);\n    ctx.body = `Some kind of error. Check your source code.\\n${e.message}`;\n  });\n\n  /* CUSTOM KOA APP INSTANTIATION */\n\n  // config of`app` outside of middleware/routing\n  // see config/example.js fmi & examples.\n  config.getKoaApp(app => {\n    // add new `engine` key to the app.context` prototype; used by middleware\n    // below to set a `Powered-By` header.\n    // eslint-disable-next-line no-param-reassign\n    app.context.engine = 'ReactQL';\n  });\n\n  /* CUSTOM MIDDLEWARE */\n\n  // Custom middleware to be processed on the server.\n  config.addMiddleware(async (ctx, next) => {\n    // custom header\n    ctx.set('Powered-By', ctx.engine); // <-- `ctx.engine` srt above!\n\n    // Redux action to manipulate the state on the server side.\n    ctx.store.dispatch({ type: 'INCREMENT_COUNTER' });\n\n    // Always return `next()`, otherwise the request won't 'pass' to the next\n    // middleware in the stack (likely, the React handler)\n    return next();\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config/server.js","// ----------------------\n// IMPORTS\n// Config API for adding reducers and configuring ReactQL app\nimport config from 'kit/config';\n\n// ----------------------\n// BROWSER CONFIGURATION\n\n// Set browsesr config, by checking `SERVER`\n\nif (!SERVER) {\n  /* APOLLO */\n  config.addApolloMiddleware((req, next) => {\n  // TODO: figure out if I should sync server or graphql store with localstorage\n  // for session-like purposes\n    if (!req.options.headers) {\n      req.options.headers = {};\n    }\n\n    const token = localStorage.getItem('token')\n      ? localStorage.getItem('token')\n      : null;\n\n    req.options.headers.authorization = `JWT ${token}`;\n\n    next();\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config/browser.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles.global.css\n// module id = 515\n// module chunks = 0","// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Apollo client library\nimport { createNetworkInterface, ApolloClient } from 'react-apollo';\n\n/* ReactQL */\n\n// Configuration\nimport config from 'kit/config';\n\n// Get environment, to figure out where we're running the GraphQL server\nimport { getServerURL } from 'kit/lib/env';\n\n// ----------------------\n\n// Helper function to create a new Apollo client, by merging in\n// passed options alongside any set by `config.setApolloOptions` and defaults\nexport function createClient(opt = {}) {\n  return new ApolloClient(Object.assign({\n    reduxRootSelector: state => state.apollo,\n  }, config.apolloClientOptions, opt));\n}\n\n// Wrap `createNetworkInterface` to attach middleware\n// TODO: consider switching to createBatchingNetworkInterface, w/ settings to\n// match https://github.com/mbrochh/django-graphql-apollo-react-demo#=\nexport function getNetworkInterface(uri) {\n  const networkInterface = createNetworkInterface({\n    uri,\n    opts: config.apolloNetworkOptions,\n  });\n\n  // Couldn't get network requests to not return 400 bad error when I used this\n  // const networkInterface = createBatchingNetworkInterface({\n  //   uri: 'http://localhost:8000/gql', // same as uri\n  //   batchInterval: 10,\n  //   opts: {  // same as config.apolloNetworkOptions\n  //     credentials: 'same-origin',\n  //   },\n  // })\n\n  // Attach middleware\n  networkInterface.use(config.apolloMiddleware.map(f => ({ applyMiddleware: f })));\n  networkInterface.useAfter(config.apolloAfterware.map(f => ({ applyAfterware: f })));\n\n  return networkInterface;\n}\n\n// Creates a new browser client\nexport function browserClient() {\n  // If we have an internal GraphQL server, we need to append it with a\n  // call to `getServerURL()` to add the correct host (in dev + production)\n  const uri = config.graphQLServer\n    ? `${getServerURL()}${config.graphQLEndpoint}` : config.graphQLEndpoint;\n\n  return createClient({\n    networkInterface: getNetworkInterface(uri),\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/apollo.js","/* eslint-disable import/prefer-default-export */\n\n// Environment-aware functions\n\n// Get the protocol://host:port of where the current server would bind\nexport function getServerURL(host = process.env.HOST, port = process.env.PORT, allowSSL = true) {\n  // Check for SSL\n  if (allowSSL && process.env.SSL_PORT) {\n    const stub = `https://${host || process.env.HOST}`;\n\n    // If we're on port 443, that's 'regular' SSL so no need to specify port\n    if (process.env.SSL_PORT === '443') return stub;\n    return `${stub}:${process.env.SSL_PORT}`;\n  }\n\n  // Plain HTTP\n  const stub = `http://${host || process.env.HOST}`;\n\n  // If we're on port 80, that's 'regular' HTTP so no need to specify port\n  if (port === '80') return stub;\n  return `${stub}:${port}`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/env.js","/* eslint-disable no-underscore-dangle */\n\n/*\nCustom Redux store creation.  Along with the default Apollo store,\nwe can define custom reducers using `kit/config.addReducer()` which will\nbe available on the server and in the browser.\n\nStore state is wrapped by `seamless-immutable` to enforce a pattern of\nimmutability, to prevent weird side effects.\n*/\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport Immutable from 'seamless-immutable';\n\n/* Local */\nimport config from 'kit/config';\n\n// ----------------------\n\n// Detect if we're both in the browser, AND we have dehydrated state\nconst hasState = !!(!SERVER && window.__STATE__);\n\n// Helper function that 'unwinds' the `config.reducers` Map, and provides\n// the `reducer` function or `initialState` (wrapped in `seamless-immutable`)\n// depending on what we asked for\nfunction unwind(reducer = true) {\n  // Unwind `config.reducers`.  If we're looking for the `reducer`, we'll\n  // wrap this in a `defaultReducer` function that properly handles the Redux\n  // 'undefined' sentinel value, or calls 'real' reducer if it's not undefined.\n  //\n  // If we're not looking for reducers, it'll pull out the `initialState`\n  // variable instead, which we'll further process below\n  const r = Object.assign({},\n    ...[].concat([...config.reducers].map(arr => ({\n      [arr[0]]: reducer ? function defaultReducer(state, action) {\n        // If `state` === undefined, this is Redux sending a sentinel value\n        // to check our set-up.  So we'll send back a plain object to prove\n        // that we're properly handling our reducer\n        if (typeof state === 'undefined') return {};\n\n        // Otherwise, call our real reducer with the {state, action}\n        return arr[1].reducer(state, action);\n      } : arr[1].initialState,\n    }))),\n  );\n\n  // If this is a reducer, return at this point\n  if (reducer) return r;\n\n  // If not, we're looking for the state -- so let's map it and wrap the\n  // object in `seamless-immutable`, to avoid side-effects with Redux\n  return Object.assign({}, ...Object.keys(r).map(key => ({\n    [key]: Immutable((hasState && (window.__STATE__[key])) || r[key]),\n  })));\n}\n\nexport default function createNewStore(apolloClient) {\n  const store = createStore(\n    // By default, we'll use just the apollo reducer.  We can easily add our\n    // own here, for global store management outside of Apollo\n    combineReducers({\n      apollo: apolloClient.reducer(),\n      ...unwind(),\n    }),\n    // Initial server state, provided by the server.\n    {\n      apollo: (hasState && window.__STATE__.apollo) || {},\n      ...unwind(false),\n    },\n    compose(\n      applyMiddleware(\n        apolloClient.middleware(),\n        thunkMiddleware,\n      ),\n      // Enable Redux Devtools on the browser, for easy state debugging\n      // eslint-disable-next-line no-underscore-dangle\n      (!SERVER && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined') ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    ),\n  );\n\n  return store;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/redux.js"],"sourceRoot":""}